package managementgroups

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// EntitySearchType enumerates the values for entity search type.
type EntitySearchType string

const (
	// AllowedChildren ...
	AllowedChildren EntitySearchType = "AllowedChildren"
	// AllowedParents ...
	AllowedParents EntitySearchType = "AllowedParents"
	// ChildrenOnly ...
	ChildrenOnly EntitySearchType = "ChildrenOnly"
	// ParentAndFirstLevelChildren ...
	ParentAndFirstLevelChildren EntitySearchType = "ParentAndFirstLevelChildren"
	// ParentOnly ...
	ParentOnly EntitySearchType = "ParentOnly"
)

// PossibleEntitySearchTypeValues returns an array of possible values for the EntitySearchType const type.
func PossibleEntitySearchTypeValues() []EntitySearchType {
	return []EntitySearchType{AllowedChildren, AllowedParents, ChildrenOnly, ParentAndFirstLevelChildren, ParentOnly}
}

// EntityViewParameterType enumerates the values for entity view parameter type.
type EntityViewParameterType string

const (
	// Audit ...
	Audit EntityViewParameterType = "Audit"
	// FullHierarchy ...
	FullHierarchy EntityViewParameterType = "FullHierarchy"
	// GroupsOnly ...
	GroupsOnly EntityViewParameterType = "GroupsOnly"
	// SubscriptionsOnly ...
	SubscriptionsOnly EntityViewParameterType = "SubscriptionsOnly"
)

// PossibleEntityViewParameterTypeValues returns an array of possible values for the EntityViewParameterType const type.
func PossibleEntityViewParameterTypeValues() []EntityViewParameterType {
	return []EntityViewParameterType{Audit, FullHierarchy, GroupsOnly, SubscriptionsOnly}
}

// ManagementGroupChildType enumerates the values for management group child type.
type ManagementGroupChildType string

const (
	// MicrosoftManagementmanagementGroups ...
	MicrosoftManagementmanagementGroups ManagementGroupChildType = "Microsoft.Management/managementGroups"
	// Subscriptions ...
	Subscriptions ManagementGroupChildType = "/subscriptions"
)

// PossibleManagementGroupChildTypeValues returns an array of possible values for the ManagementGroupChildType const type.
func PossibleManagementGroupChildTypeValues() []ManagementGroupChildType {
	return []ManagementGroupChildType{MicrosoftManagementmanagementGroups, Subscriptions}
}

// ManagementGroupExpandType enumerates the values for management group expand type.
type ManagementGroupExpandType string

const (
	// Ancestors ...
	Ancestors ManagementGroupExpandType = "ancestors"
	// Children ...
	Children ManagementGroupExpandType = "children"
	// Path ...
	Path ManagementGroupExpandType = "path"
)

// PossibleManagementGroupExpandTypeValues returns an array of possible values for the ManagementGroupExpandType const type.
func PossibleManagementGroupExpandTypeValues() []ManagementGroupExpandType {
	return []ManagementGroupExpandType{Ancestors, Children, Path}
}

// Permissions enumerates the values for permissions.
type Permissions string

const (
	// Delete ...
	Delete Permissions = "delete"
	// Edit ...
	Edit Permissions = "edit"
	// Noaccess ...
	Noaccess Permissions = "noaccess"
	// View ...
	View Permissions = "view"
)

// PossiblePermissionsValues returns an array of possible values for the Permissions const type.
func PossiblePermissionsValues() []Permissions {
	return []Permissions{Delete, Edit, Noaccess, View}
}

// Reason enumerates the values for reason.
type Reason string

const (
	// AlreadyExists ...
	AlreadyExists Reason = "AlreadyExists"
	// Invalid ...
	Invalid Reason = "Invalid"
)

// PossibleReasonValues returns an array of possible values for the Reason const type.
func PossibleReasonValues() []Reason {
	return []Reason{AlreadyExists, Invalid}
}

// Status enumerates the values for status.
type Status string

const (
	// Cancelled ...
	Cancelled Status = "Cancelled"
	// Completed ...
	Completed Status = "Completed"
	// Failed ...
	Failed Status = "Failed"
	// NotStarted ...
	NotStarted Status = "NotStarted"
	// NotStartedButGroupsExist ...
	NotStartedButGroupsExist Status = "NotStartedButGroupsExist"
	// Started ...
	Started Status = "Started"
)

// PossibleStatusValues returns an array of possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{Cancelled, Completed, Failed, NotStarted, NotStartedButGroupsExist, Started}
}

// Type enumerates the values for type.
type Type string

const (
	// TypeMicrosoftManagementmanagementGroups ...
	TypeMicrosoftManagementmanagementGroups Type = "Microsoft.Management/managementGroups"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{TypeMicrosoftManagementmanagementGroups}
}
