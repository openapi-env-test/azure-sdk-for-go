package workloads

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal}
}

// ApplicationProvisioningState enumerates the values for application provisioning state.
type ApplicationProvisioningState string

const (
	// Accepted ...
	Accepted ApplicationProvisioningState = "Accepted"
	// Canceled ...
	Canceled ApplicationProvisioningState = "Canceled"
	// Created ...
	Created ApplicationProvisioningState = "Created"
	// Failed ...
	Failed ApplicationProvisioningState = "Failed"
	// Installing ...
	Installing ApplicationProvisioningState = "Installing"
	// NotSpecified ...
	NotSpecified ApplicationProvisioningState = "NotSpecified"
	// Succeeded ...
	Succeeded ApplicationProvisioningState = "Succeeded"
)

// PossibleApplicationProvisioningStateValues returns an array of possible values for the ApplicationProvisioningState const type.
func PossibleApplicationProvisioningStateValues() []ApplicationProvisioningState {
	return []ApplicationProvisioningState{Accepted, Canceled, Created, Failed, Installing, NotSpecified, Succeeded}
}

// AzureFrontDoorEnabled enumerates the values for azure front door enabled.
type AzureFrontDoorEnabled string

const (
	// Disabled ...
	Disabled AzureFrontDoorEnabled = "Disabled"
	// Enabled ...
	Enabled AzureFrontDoorEnabled = "Enabled"
)

// PossibleAzureFrontDoorEnabledValues returns an array of possible values for the AzureFrontDoorEnabled const type.
func PossibleAzureFrontDoorEnabledValues() []AzureFrontDoorEnabled {
	return []AzureFrontDoorEnabled{Disabled, Enabled}
}

// CentralServerVirtualMachineType enumerates the values for central server virtual machine type.
type CentralServerVirtualMachineType string

const (
	// ASCS ...
	ASCS CentralServerVirtualMachineType = "ASCS"
	// ERS ...
	ERS CentralServerVirtualMachineType = "ERS"
	// ERSInactive ...
	ERSInactive CentralServerVirtualMachineType = "ERSInactive"
	// Primary ...
	Primary CentralServerVirtualMachineType = "Primary"
	// Secondary ...
	Secondary CentralServerVirtualMachineType = "Secondary"
	// Standby ...
	Standby CentralServerVirtualMachineType = "Standby"
	// Unknown ...
	Unknown CentralServerVirtualMachineType = "Unknown"
)

// PossibleCentralServerVirtualMachineTypeValues returns an array of possible values for the CentralServerVirtualMachineType const type.
func PossibleCentralServerVirtualMachineTypeValues() []CentralServerVirtualMachineType {
	return []CentralServerVirtualMachineType{ASCS, ERS, ERSInactive, Primary, Secondary, Standby, Unknown}
}

// ConfigurationType enumerates the values for configuration type.
type ConfigurationType string

const (
	// ConfigurationTypeDeployment ...
	ConfigurationTypeDeployment ConfigurationType = "Deployment"
	// ConfigurationTypeDeploymentWithOSConfig ...
	ConfigurationTypeDeploymentWithOSConfig ConfigurationType = "DeploymentWithOSConfig"
	// ConfigurationTypeDiscovery ...
	ConfigurationTypeDiscovery ConfigurationType = "Discovery"
	// ConfigurationTypeSAPConfiguration ...
	ConfigurationTypeSAPConfiguration ConfigurationType = "SAPConfiguration"
)

// PossibleConfigurationTypeValues returns an array of possible values for the ConfigurationType const type.
func PossibleConfigurationTypeValues() []ConfigurationType {
	return []ConfigurationType{ConfigurationTypeDeployment, ConfigurationTypeDeploymentWithOSConfig, ConfigurationTypeDiscovery, ConfigurationTypeSAPConfiguration}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// DatabaseTier enumerates the values for database tier.
type DatabaseTier string

const (
	// Burstable ...
	Burstable DatabaseTier = "Burstable"
	// GeneralPurpose ...
	GeneralPurpose DatabaseTier = "GeneralPurpose"
	// MemoryOptimized ...
	MemoryOptimized DatabaseTier = "MemoryOptimized"
)

// PossibleDatabaseTierValues returns an array of possible values for the DatabaseTier const type.
func PossibleDatabaseTierValues() []DatabaseTier {
	return []DatabaseTier{Burstable, GeneralPurpose, MemoryOptimized}
}

// DeploymentType enumerates the values for deployment type.
type DeploymentType string

const (
	// DeploymentTypeSAPSizingRecommendationResult ...
	DeploymentTypeSAPSizingRecommendationResult DeploymentType = "SAPSizingRecommendationResult"
	// DeploymentTypeSingleServer ...
	DeploymentTypeSingleServer DeploymentType = "SingleServer"
	// DeploymentTypeThreeTier ...
	DeploymentTypeThreeTier DeploymentType = "ThreeTier"
)

// PossibleDeploymentTypeValues returns an array of possible values for the DeploymentType const type.
func PossibleDeploymentTypeValues() []DeploymentType {
	return []DeploymentType{DeploymentTypeSAPSizingRecommendationResult, DeploymentTypeSingleServer, DeploymentTypeThreeTier}
}

// DeploymentTypeBasicInfrastructureConfiguration enumerates the values for deployment type basic
// infrastructure configuration.
type DeploymentTypeBasicInfrastructureConfiguration string

const (
	// DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeInfrastructureConfiguration ...
	DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeInfrastructureConfiguration DeploymentTypeBasicInfrastructureConfiguration = "InfrastructureConfiguration"
	// DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeSingleServer ...
	DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeSingleServer DeploymentTypeBasicInfrastructureConfiguration = "SingleServer"
	// DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeThreeTier ...
	DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeThreeTier DeploymentTypeBasicInfrastructureConfiguration = "ThreeTier"
)

// PossibleDeploymentTypeBasicInfrastructureConfigurationValues returns an array of possible values for the DeploymentTypeBasicInfrastructureConfiguration const type.
func PossibleDeploymentTypeBasicInfrastructureConfigurationValues() []DeploymentTypeBasicInfrastructureConfiguration {
	return []DeploymentTypeBasicInfrastructureConfiguration{DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeInfrastructureConfiguration, DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeSingleServer, DeploymentTypeBasicInfrastructureConfigurationDeploymentTypeThreeTier}
}

// DiskStorageType enumerates the values for disk storage type.
type DiskStorageType string

const (
	// PremiumLRS ...
	PremiumLRS DiskStorageType = "Premium_LRS"
	// StandardLRS ...
	StandardLRS DiskStorageType = "Standard_LRS"
	// StandardSSDLRS ...
	StandardSSDLRS DiskStorageType = "StandardSSD_LRS"
)

// PossibleDiskStorageTypeValues returns an array of possible values for the DiskStorageType const type.
func PossibleDiskStorageTypeValues() []DiskStorageType {
	return []DiskStorageType{PremiumLRS, StandardLRS, StandardSSDLRS}
}

// EnableBackup enumerates the values for enable backup.
type EnableBackup string

const (
	// EnableBackupDisabled ...
	EnableBackupDisabled EnableBackup = "Disabled"
	// EnableBackupEnabled ...
	EnableBackupEnabled EnableBackup = "Enabled"
)

// PossibleEnableBackupValues returns an array of possible values for the EnableBackup const type.
func PossibleEnableBackupValues() []EnableBackup {
	return []EnableBackup{EnableBackupDisabled, EnableBackupEnabled}
}

// EnableSslEnforcement enumerates the values for enable ssl enforcement.
type EnableSslEnforcement string

const (
	// EnableSslEnforcementDisabled ...
	EnableSslEnforcementDisabled EnableSslEnforcement = "Disabled"
	// EnableSslEnforcementEnabled ...
	EnableSslEnforcementEnabled EnableSslEnforcement = "Enabled"
)

// PossibleEnableSslEnforcementValues returns an array of possible values for the EnableSslEnforcement const type.
func PossibleEnableSslEnforcementValues() []EnableSslEnforcement {
	return []EnableSslEnforcement{EnableSslEnforcementDisabled, EnableSslEnforcementEnabled}
}

// EnqueueReplicationServerType enumerates the values for enqueue replication server type.
type EnqueueReplicationServerType string

const (
	// EnqueueReplicator1 ...
	EnqueueReplicator1 EnqueueReplicationServerType = "EnqueueReplicator1"
	// EnqueueReplicator2 ...
	EnqueueReplicator2 EnqueueReplicationServerType = "EnqueueReplicator2"
)

// PossibleEnqueueReplicationServerTypeValues returns an array of possible values for the EnqueueReplicationServerType const type.
func PossibleEnqueueReplicationServerTypeValues() []EnqueueReplicationServerType {
	return []EnqueueReplicationServerType{EnqueueReplicator1, EnqueueReplicator2}
}

// FileShareStorageType enumerates the values for file share storage type.
type FileShareStorageType string

const (
	// FileShareStorageTypePremiumLRS ...
	FileShareStorageTypePremiumLRS FileShareStorageType = "Premium_LRS"
	// FileShareStorageTypeStandardGRS ...
	FileShareStorageTypeStandardGRS FileShareStorageType = "Standard_GRS"
	// FileShareStorageTypeStandardLRS ...
	FileShareStorageTypeStandardLRS FileShareStorageType = "Standard_LRS"
	// FileShareStorageTypeStandardZRS ...
	FileShareStorageTypeStandardZRS FileShareStorageType = "Standard_ZRS"
)

// PossibleFileShareStorageTypeValues returns an array of possible values for the FileShareStorageType const type.
func PossibleFileShareStorageTypeValues() []FileShareStorageType {
	return []FileShareStorageType{FileShareStorageTypePremiumLRS, FileShareStorageTypeStandardGRS, FileShareStorageTypeStandardLRS, FileShareStorageTypeStandardZRS}
}

// FileShareType enumerates the values for file share type.
type FileShareType string

const (
	// AzureFiles ...
	AzureFiles FileShareType = "AzureFiles"
	// NfsOnController ...
	NfsOnController FileShareType = "NfsOnController"
)

// PossibleFileShareTypeValues returns an array of possible values for the FileShareType const type.
func PossibleFileShareTypeValues() []FileShareType {
	return []FileShareType{AzureFiles, NfsOnController}
}

// HAEnabled enumerates the values for ha enabled.
type HAEnabled string

const (
	// HAEnabledDisabled ...
	HAEnabledDisabled HAEnabled = "Disabled"
	// HAEnabledEnabled ...
	HAEnabledEnabled HAEnabled = "Enabled"
)

// PossibleHAEnabledValues returns an array of possible values for the HAEnabled const type.
func PossibleHAEnabledValues() []HAEnabled {
	return []HAEnabled{HAEnabledDisabled, HAEnabledEnabled}
}

// LoadBalancerType enumerates the values for load balancer type.
type LoadBalancerType string

const (
	// ApplicationGateway ...
	ApplicationGateway LoadBalancerType = "ApplicationGateway"
	// LoadBalancer ...
	LoadBalancer LoadBalancerType = "LoadBalancer"
)

// PossibleLoadBalancerTypeValues returns an array of possible values for the LoadBalancerType const type.
func PossibleLoadBalancerTypeValues() []LoadBalancerType {
	return []LoadBalancerType{ApplicationGateway, LoadBalancer}
}

// LocationType enumerates the values for location type.
type LocationType string

const (
	// EdgeZone ...
	EdgeZone LocationType = "EdgeZone"
	// Region ...
	Region LocationType = "Region"
)

// PossibleLocationTypeValues returns an array of possible values for the LocationType const type.
func PossibleLocationTypeValues() []LocationType {
	return []LocationType{EdgeZone, Region}
}

// ManagedServiceIdentityType enumerates the values for managed service identity type.
type ManagedServiceIdentityType string

const (
	// None ...
	None ManagedServiceIdentityType = "None"
	// UserAssigned ...
	UserAssigned ManagedServiceIdentityType = "UserAssigned"
)

// PossibleManagedServiceIdentityTypeValues returns an array of possible values for the ManagedServiceIdentityType const type.
func PossibleManagedServiceIdentityTypeValues() []ManagedServiceIdentityType {
	return []ManagedServiceIdentityType{None, UserAssigned}
}

// OperationProperties enumerates the values for operation properties.
type OperationProperties string

const (
	// OperationPropertiesNotSpecified ...
	OperationPropertiesNotSpecified OperationProperties = "NotSpecified"
	// OperationPropertiesSystem ...
	OperationPropertiesSystem OperationProperties = "System"
	// OperationPropertiesUser ...
	OperationPropertiesUser OperationProperties = "User"
)

// PossibleOperationPropertiesValues returns an array of possible values for the OperationProperties const type.
func PossibleOperationPropertiesValues() []OperationProperties {
	return []OperationProperties{OperationPropertiesNotSpecified, OperationPropertiesSystem, OperationPropertiesUser}
}

// Origin enumerates the values for origin.
type Origin string

const (
	// OriginSystem ...
	OriginSystem Origin = "system"
	// OriginUser ...
	OriginUser Origin = "user"
	// OriginUsersystem ...
	OriginUsersystem Origin = "user,system"
)

// PossibleOriginValues returns an array of possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{OriginSystem, OriginUser, OriginUsersystem}
}

// OSImageOffer enumerates the values for os image offer.
type OSImageOffer string

const (
	// UbuntuServer ...
	UbuntuServer OSImageOffer = "UbuntuServer"
)

// PossibleOSImageOfferValues returns an array of possible values for the OSImageOffer const type.
func PossibleOSImageOfferValues() []OSImageOffer {
	return []OSImageOffer{UbuntuServer}
}

// OSImagePublisher enumerates the values for os image publisher.
type OSImagePublisher string

const (
	// Canonical ...
	Canonical OSImagePublisher = "Canonical"
)

// PossibleOSImagePublisherValues returns an array of possible values for the OSImagePublisher const type.
func PossibleOSImagePublisherValues() []OSImagePublisher {
	return []OSImagePublisher{Canonical}
}

// OSImageSku enumerates the values for os image sku.
type OSImageSku string

const (
	// OneEightFullStopZeroFourHyphenMinusLTS ...
	OneEightFullStopZeroFourHyphenMinusLTS OSImageSku = "18.04-LTS"
	// OneSixFullStopZeroFourHyphenMinusLTS ...
	OneSixFullStopZeroFourHyphenMinusLTS OSImageSku = "16.04-LTS"
)

// PossibleOSImageSkuValues returns an array of possible values for the OSImageSku const type.
func PossibleOSImageSkuValues() []OSImageSku {
	return []OSImageSku{OneEightFullStopZeroFourHyphenMinusLTS, OneSixFullStopZeroFourHyphenMinusLTS}
}

// OSImageVersion enumerates the values for os image version.
type OSImageVersion string

const (
	// Latest ...
	Latest OSImageVersion = "latest"
)

// PossibleOSImageVersionValues returns an array of possible values for the OSImageVersion const type.
func PossibleOSImageVersionValues() []OSImageVersion {
	return []OSImageVersion{Latest}
}

// OsType enumerates the values for os type.
type OsType string

const (
	// OsTypeLinux ...
	OsTypeLinux OsType = "Linux"
	// OsTypeOSConfiguration ...
	OsTypeOSConfiguration OsType = "OSConfiguration"
	// OsTypeWindows ...
	OsTypeWindows OsType = "Windows"
)

// PossibleOsTypeValues returns an array of possible values for the OsType const type.
func PossibleOsTypeValues() []OsType {
	return []OsType{OsTypeLinux, OsTypeOSConfiguration, OsTypeWindows}
}

// PHPVersion enumerates the values for php version.
type PHPVersion string

const (
	// SevenFullStopFour ...
	SevenFullStopFour PHPVersion = "7.4"
	// SevenFullStopThree ...
	SevenFullStopThree PHPVersion = "7.3"
	// SevenFullStopTwo ...
	SevenFullStopTwo PHPVersion = "7.2"
)

// PossiblePHPVersionValues returns an array of possible values for the PHPVersion const type.
func PossiblePHPVersionValues() []PHPVersion {
	return []PHPVersion{SevenFullStopFour, SevenFullStopThree, SevenFullStopTwo}
}

// PhpWorkloadProvisioningState enumerates the values for php workload provisioning state.
type PhpWorkloadProvisioningState string

const (
	// PhpWorkloadProvisioningStateAccepted ...
	PhpWorkloadProvisioningStateAccepted PhpWorkloadProvisioningState = "Accepted"
	// PhpWorkloadProvisioningStateCanceled ...
	PhpWorkloadProvisioningStateCanceled PhpWorkloadProvisioningState = "Canceled"
	// PhpWorkloadProvisioningStateCreated ...
	PhpWorkloadProvisioningStateCreated PhpWorkloadProvisioningState = "Created"
	// PhpWorkloadProvisioningStateDeleting ...
	PhpWorkloadProvisioningStateDeleting PhpWorkloadProvisioningState = "Deleting"
	// PhpWorkloadProvisioningStateFailed ...
	PhpWorkloadProvisioningStateFailed PhpWorkloadProvisioningState = "Failed"
	// PhpWorkloadProvisioningStateNotSpecified ...
	PhpWorkloadProvisioningStateNotSpecified PhpWorkloadProvisioningState = "NotSpecified"
	// PhpWorkloadProvisioningStateProvisioning ...
	PhpWorkloadProvisioningStateProvisioning PhpWorkloadProvisioningState = "Provisioning"
	// PhpWorkloadProvisioningStateSucceeded ...
	PhpWorkloadProvisioningStateSucceeded PhpWorkloadProvisioningState = "Succeeded"
)

// PossiblePhpWorkloadProvisioningStateValues returns an array of possible values for the PhpWorkloadProvisioningState const type.
func PossiblePhpWorkloadProvisioningStateValues() []PhpWorkloadProvisioningState {
	return []PhpWorkloadProvisioningState{PhpWorkloadProvisioningStateAccepted, PhpWorkloadProvisioningStateCanceled, PhpWorkloadProvisioningStateCreated, PhpWorkloadProvisioningStateDeleting, PhpWorkloadProvisioningStateFailed, PhpWorkloadProvisioningStateNotSpecified, PhpWorkloadProvisioningStateProvisioning, PhpWorkloadProvisioningStateSucceeded}
}

// ProviderType enumerates the values for provider type.
type ProviderType string

const (
	// ProviderTypeDb2 ...
	ProviderTypeDb2 ProviderType = "Db2"
	// ProviderTypeMsSQLServer ...
	ProviderTypeMsSQLServer ProviderType = "MsSqlServer"
	// ProviderTypePrometheusHaCluster ...
	ProviderTypePrometheusHaCluster ProviderType = "PrometheusHaCluster"
	// ProviderTypePrometheusOS ...
	ProviderTypePrometheusOS ProviderType = "PrometheusOS"
	// ProviderTypeProviderSpecificProperties ...
	ProviderTypeProviderSpecificProperties ProviderType = "ProviderSpecificProperties"
	// ProviderTypeSapHana ...
	ProviderTypeSapHana ProviderType = "SapHana"
	// ProviderTypeSapNetWeaver ...
	ProviderTypeSapNetWeaver ProviderType = "SapNetWeaver"
)

// PossibleProviderTypeValues returns an array of possible values for the ProviderType const type.
func PossibleProviderTypeValues() []ProviderType {
	return []ProviderType{ProviderTypeDb2, ProviderTypeMsSQLServer, ProviderTypePrometheusHaCluster, ProviderTypePrometheusOS, ProviderTypeProviderSpecificProperties, ProviderTypeSapHana, ProviderTypeSapNetWeaver}
}

// RedisCacheFamily enumerates the values for redis cache family.
type RedisCacheFamily string

const (
	// C ...
	C RedisCacheFamily = "C"
	// P ...
	P RedisCacheFamily = "P"
)

// PossibleRedisCacheFamilyValues returns an array of possible values for the RedisCacheFamily const type.
func PossibleRedisCacheFamilyValues() []RedisCacheFamily {
	return []RedisCacheFamily{C, P}
}

// ResourceIdentityType enumerates the values for resource identity type.
type ResourceIdentityType string

const (
	// SystemAssigned ...
	SystemAssigned ResourceIdentityType = "SystemAssigned"
)

// PossibleResourceIdentityTypeValues returns an array of possible values for the ResourceIdentityType const type.
func PossibleResourceIdentityTypeValues() []ResourceIdentityType {
	return []ResourceIdentityType{SystemAssigned}
}

// RoutingPreference enumerates the values for routing preference.
type RoutingPreference string

const (
	// Default ...
	Default RoutingPreference = "Default"
	// RouteAll ...
	RouteAll RoutingPreference = "RouteAll"
)

// PossibleRoutingPreferenceValues returns an array of possible values for the RoutingPreference const type.
func PossibleRoutingPreferenceValues() []RoutingPreference {
	return []RoutingPreference{Default, RouteAll}
}

// SAPConfigurationType enumerates the values for sap configuration type.
type SAPConfigurationType string

const (
	// Deployment ...
	Deployment SAPConfigurationType = "Deployment"
	// DeploymentWithOSConfig ...
	DeploymentWithOSConfig SAPConfigurationType = "DeploymentWithOSConfig"
	// Discovery ...
	Discovery SAPConfigurationType = "Discovery"
)

// PossibleSAPConfigurationTypeValues returns an array of possible values for the SAPConfigurationType const type.
func PossibleSAPConfigurationTypeValues() []SAPConfigurationType {
	return []SAPConfigurationType{Deployment, DeploymentWithOSConfig, Discovery}
}

// SAPDatabaseScaleMethod enumerates the values for sap database scale method.
type SAPDatabaseScaleMethod string

const (
	// ScaleUp ...
	ScaleUp SAPDatabaseScaleMethod = "ScaleUp"
)

// PossibleSAPDatabaseScaleMethodValues returns an array of possible values for the SAPDatabaseScaleMethod const type.
func PossibleSAPDatabaseScaleMethodValues() []SAPDatabaseScaleMethod {
	return []SAPDatabaseScaleMethod{ScaleUp}
}

// SAPDatabaseType enumerates the values for sap database type.
type SAPDatabaseType string

const (
	// DB2 ...
	DB2 SAPDatabaseType = "DB2"
	// HANA ...
	HANA SAPDatabaseType = "HANA"
)

// PossibleSAPDatabaseTypeValues returns an array of possible values for the SAPDatabaseType const type.
func PossibleSAPDatabaseTypeValues() []SAPDatabaseType {
	return []SAPDatabaseType{DB2, HANA}
}

// SAPDeploymentType enumerates the values for sap deployment type.
type SAPDeploymentType string

const (
	// SingleServer ...
	SingleServer SAPDeploymentType = "SingleServer"
	// ThreeTier ...
	ThreeTier SAPDeploymentType = "ThreeTier"
)

// PossibleSAPDeploymentTypeValues returns an array of possible values for the SAPDeploymentType const type.
func PossibleSAPDeploymentTypeValues() []SAPDeploymentType {
	return []SAPDeploymentType{SingleServer, ThreeTier}
}

// SAPEnvironmentType enumerates the values for sap environment type.
type SAPEnvironmentType string

const (
	// NonProd ...
	NonProd SAPEnvironmentType = "NonProd"
	// Prod ...
	Prod SAPEnvironmentType = "Prod"
)

// PossibleSAPEnvironmentTypeValues returns an array of possible values for the SAPEnvironmentType const type.
func PossibleSAPEnvironmentTypeValues() []SAPEnvironmentType {
	return []SAPEnvironmentType{NonProd, Prod}
}

// SAPHealthState enumerates the values for sap health state.
type SAPHealthState string

const (
	// SAPHealthStateDegraded ...
	SAPHealthStateDegraded SAPHealthState = "Degraded"
	// SAPHealthStateHealthy ...
	SAPHealthStateHealthy SAPHealthState = "Healthy"
	// SAPHealthStateUnhealthy ...
	SAPHealthStateUnhealthy SAPHealthState = "Unhealthy"
	// SAPHealthStateUnknown ...
	SAPHealthStateUnknown SAPHealthState = "Unknown"
)

// PossibleSAPHealthStateValues returns an array of possible values for the SAPHealthState const type.
func PossibleSAPHealthStateValues() []SAPHealthState {
	return []SAPHealthState{SAPHealthStateDegraded, SAPHealthStateHealthy, SAPHealthStateUnhealthy, SAPHealthStateUnknown}
}

// SAPHighAvailabilityType enumerates the values for sap high availability type.
type SAPHighAvailabilityType string

const (
	// AvailabilitySet ...
	AvailabilitySet SAPHighAvailabilityType = "AvailabilitySet"
	// AvailabilityZone ...
	AvailabilityZone SAPHighAvailabilityType = "AvailabilityZone"
)

// PossibleSAPHighAvailabilityTypeValues returns an array of possible values for the SAPHighAvailabilityType const type.
func PossibleSAPHighAvailabilityTypeValues() []SAPHighAvailabilityType {
	return []SAPHighAvailabilityType{AvailabilitySet, AvailabilityZone}
}

// SAPProductType enumerates the values for sap product type.
type SAPProductType string

const (
	// ECC ...
	ECC SAPProductType = "ECC"
	// Other ...
	Other SAPProductType = "Other"
	// S4HANA ...
	S4HANA SAPProductType = "S4HANA"
)

// PossibleSAPProductTypeValues returns an array of possible values for the SAPProductType const type.
func PossibleSAPProductTypeValues() []SAPProductType {
	return []SAPProductType{ECC, Other, S4HANA}
}

// SAPSoftwareInstallationType enumerates the values for sap software installation type.
type SAPSoftwareInstallationType string

const (
	// SAPInstallWithoutOSConfig ...
	SAPInstallWithoutOSConfig SAPSoftwareInstallationType = "SAPInstallWithoutOSConfig"
	// ServiceInitiated ...
	ServiceInitiated SAPSoftwareInstallationType = "ServiceInitiated"
)

// PossibleSAPSoftwareInstallationTypeValues returns an array of possible values for the SAPSoftwareInstallationType const type.
func PossibleSAPSoftwareInstallationTypeValues() []SAPSoftwareInstallationType {
	return []SAPSoftwareInstallationType{SAPInstallWithoutOSConfig, ServiceInitiated}
}

// SapVirtualInstanceProvisioningState enumerates the values for sap virtual instance provisioning state.
type SapVirtualInstanceProvisioningState string

const (
	// SapVirtualInstanceProvisioningStateCreating ...
	SapVirtualInstanceProvisioningStateCreating SapVirtualInstanceProvisioningState = "Creating"
	// SapVirtualInstanceProvisioningStateDeleting ...
	SapVirtualInstanceProvisioningStateDeleting SapVirtualInstanceProvisioningState = "Deleting"
	// SapVirtualInstanceProvisioningStateFailed ...
	SapVirtualInstanceProvisioningStateFailed SapVirtualInstanceProvisioningState = "Failed"
	// SapVirtualInstanceProvisioningStateSucceeded ...
	SapVirtualInstanceProvisioningStateSucceeded SapVirtualInstanceProvisioningState = "Succeeded"
	// SapVirtualInstanceProvisioningStateUpdating ...
	SapVirtualInstanceProvisioningStateUpdating SapVirtualInstanceProvisioningState = "Updating"
)

// PossibleSapVirtualInstanceProvisioningStateValues returns an array of possible values for the SapVirtualInstanceProvisioningState const type.
func PossibleSapVirtualInstanceProvisioningStateValues() []SapVirtualInstanceProvisioningState {
	return []SapVirtualInstanceProvisioningState{SapVirtualInstanceProvisioningStateCreating, SapVirtualInstanceProvisioningStateDeleting, SapVirtualInstanceProvisioningStateFailed, SapVirtualInstanceProvisioningStateSucceeded, SapVirtualInstanceProvisioningStateUpdating}
}

// SAPVirtualInstanceState enumerates the values for sap virtual instance state.
type SAPVirtualInstanceState string

const (
	// DiscoveryFailed ...
	DiscoveryFailed SAPVirtualInstanceState = "DiscoveryFailed"
	// DiscoveryInProgress ...
	DiscoveryInProgress SAPVirtualInstanceState = "DiscoveryInProgress"
	// DiscoveryPending ...
	DiscoveryPending SAPVirtualInstanceState = "DiscoveryPending"
	// InfrastructureDeploymentFailed ...
	InfrastructureDeploymentFailed SAPVirtualInstanceState = "InfrastructureDeploymentFailed"
	// InfrastructureDeploymentInProgress ...
	InfrastructureDeploymentInProgress SAPVirtualInstanceState = "InfrastructureDeploymentInProgress"
	// InfrastructureDeploymentPending ...
	InfrastructureDeploymentPending SAPVirtualInstanceState = "InfrastructureDeploymentPending"
	// RegistrationComplete ...
	RegistrationComplete SAPVirtualInstanceState = "RegistrationComplete"
	// SoftwareInstallationFailed ...
	SoftwareInstallationFailed SAPVirtualInstanceState = "SoftwareInstallationFailed"
	// SoftwareInstallationInProgress ...
	SoftwareInstallationInProgress SAPVirtualInstanceState = "SoftwareInstallationInProgress"
	// SoftwareInstallationPending ...
	SoftwareInstallationPending SAPVirtualInstanceState = "SoftwareInstallationPending"
)

// PossibleSAPVirtualInstanceStateValues returns an array of possible values for the SAPVirtualInstanceState const type.
func PossibleSAPVirtualInstanceStateValues() []SAPVirtualInstanceState {
	return []SAPVirtualInstanceState{DiscoveryFailed, DiscoveryInProgress, DiscoveryPending, InfrastructureDeploymentFailed, InfrastructureDeploymentInProgress, InfrastructureDeploymentPending, RegistrationComplete, SoftwareInstallationFailed, SoftwareInstallationInProgress, SoftwareInstallationPending}
}

// SAPVirtualInstanceStatus enumerates the values for sap virtual instance status.
type SAPVirtualInstanceStatus string

const (
	// Offline ...
	Offline SAPVirtualInstanceStatus = "Offline"
	// PartiallyRunning ...
	PartiallyRunning SAPVirtualInstanceStatus = "PartiallyRunning"
	// Running ...
	Running SAPVirtualInstanceStatus = "Running"
	// Starting ...
	Starting SAPVirtualInstanceStatus = "Starting"
	// Stopping ...
	Stopping SAPVirtualInstanceStatus = "Stopping"
	// Unavailable ...
	Unavailable SAPVirtualInstanceStatus = "Unavailable"
)

// PossibleSAPVirtualInstanceStatusValues returns an array of possible values for the SAPVirtualInstanceStatus const type.
func PossibleSAPVirtualInstanceStatusValues() []SAPVirtualInstanceStatus {
	return []SAPVirtualInstanceStatus{Offline, PartiallyRunning, Running, Starting, Stopping, Unavailable}
}

// SkuRestrictionReasonCode enumerates the values for sku restriction reason code.
type SkuRestrictionReasonCode string

const (
	// SkuRestrictionReasonCodeNotAvailableForSubscription ...
	SkuRestrictionReasonCodeNotAvailableForSubscription SkuRestrictionReasonCode = "NotAvailableForSubscription"
	// SkuRestrictionReasonCodeNotSpecified ...
	SkuRestrictionReasonCodeNotSpecified SkuRestrictionReasonCode = "NotSpecified"
	// SkuRestrictionReasonCodeQuotaID ...
	SkuRestrictionReasonCodeQuotaID SkuRestrictionReasonCode = "QuotaId"
)

// PossibleSkuRestrictionReasonCodeValues returns an array of possible values for the SkuRestrictionReasonCode const type.
func PossibleSkuRestrictionReasonCodeValues() []SkuRestrictionReasonCode {
	return []SkuRestrictionReasonCode{SkuRestrictionReasonCodeNotAvailableForSubscription, SkuRestrictionReasonCodeNotSpecified, SkuRestrictionReasonCodeQuotaID}
}

// SkuRestrictionType enumerates the values for sku restriction type.
type SkuRestrictionType string

const (
	// SkuRestrictionTypeLocation ...
	SkuRestrictionTypeLocation SkuRestrictionType = "Location"
	// SkuRestrictionTypeNotSpecified ...
	SkuRestrictionTypeNotSpecified SkuRestrictionType = "NotSpecified"
	// SkuRestrictionTypeZone ...
	SkuRestrictionTypeZone SkuRestrictionType = "Zone"
)

// PossibleSkuRestrictionTypeValues returns an array of possible values for the SkuRestrictionType const type.
func PossibleSkuRestrictionTypeValues() []SkuRestrictionType {
	return []SkuRestrictionType{SkuRestrictionTypeLocation, SkuRestrictionTypeNotSpecified, SkuRestrictionTypeZone}
}

// SkuScaleType enumerates the values for sku scale type.
type SkuScaleType string

const (
	// SkuScaleTypeAutomatic ...
	SkuScaleTypeAutomatic SkuScaleType = "Automatic"
	// SkuScaleTypeManual ...
	SkuScaleTypeManual SkuScaleType = "Manual"
	// SkuScaleTypeNone ...
	SkuScaleTypeNone SkuScaleType = "None"
)

// PossibleSkuScaleTypeValues returns an array of possible values for the SkuScaleType const type.
func PossibleSkuScaleTypeValues() []SkuScaleType {
	return []SkuScaleType{SkuScaleTypeAutomatic, SkuScaleTypeManual, SkuScaleTypeNone}
}

// SkuTier enumerates the values for sku tier.
type SkuTier string

const (
	// Basic ...
	Basic SkuTier = "Basic"
	// Free ...
	Free SkuTier = "Free"
	// Premium ...
	Premium SkuTier = "Premium"
	// Standard ...
	Standard SkuTier = "Standard"
)

// PossibleSkuTierValues returns an array of possible values for the SkuTier const type.
func PossibleSkuTierValues() []SkuTier {
	return []SkuTier{Basic, Free, Premium, Standard}
}

// SoftwareInstallationType enumerates the values for software installation type.
type SoftwareInstallationType string

const (
	// SoftwareInstallationTypeSAPInstallWithoutOSConfig ...
	SoftwareInstallationTypeSAPInstallWithoutOSConfig SoftwareInstallationType = "SAPInstallWithoutOSConfig"
	// SoftwareInstallationTypeServiceInitiated ...
	SoftwareInstallationTypeServiceInitiated SoftwareInstallationType = "ServiceInitiated"
	// SoftwareInstallationTypeSoftwareConfiguration ...
	SoftwareInstallationTypeSoftwareConfiguration SoftwareInstallationType = "SoftwareConfiguration"
)

// PossibleSoftwareInstallationTypeValues returns an array of possible values for the SoftwareInstallationType const type.
func PossibleSoftwareInstallationTypeValues() []SoftwareInstallationType {
	return []SoftwareInstallationType{SoftwareInstallationTypeSAPInstallWithoutOSConfig, SoftwareInstallationTypeServiceInitiated, SoftwareInstallationTypeSoftwareConfiguration}
}

// WordpressVersions enumerates the values for wordpress versions.
type WordpressVersions string

const (
	// FiveFullStopFour ...
	FiveFullStopFour WordpressVersions = "5.4"
	// FiveFullStopFourFullStopOne ...
	FiveFullStopFourFullStopOne WordpressVersions = "5.4.1"
	// FiveFullStopFourFullStopThree ...
	FiveFullStopFourFullStopThree WordpressVersions = "5.4.3"
	// FiveFullStopFourFullStopTwo ...
	FiveFullStopFourFullStopTwo WordpressVersions = "5.4.2"
)

// PossibleWordpressVersionsValues returns an array of possible values for the WordpressVersions const type.
func PossibleWordpressVersionsValues() []WordpressVersions {
	return []WordpressVersions{FiveFullStopFour, FiveFullStopFourFullStopOne, FiveFullStopFourFullStopThree, FiveFullStopFourFullStopTwo}
}

// WorkloadMonitorActionType enumerates the values for workload monitor action type.
type WorkloadMonitorActionType string

const (
	// WorkloadMonitorActionTypeInternal ...
	WorkloadMonitorActionTypeInternal WorkloadMonitorActionType = "Internal"
	// WorkloadMonitorActionTypeNotSpecified ...
	WorkloadMonitorActionTypeNotSpecified WorkloadMonitorActionType = "NotSpecified"
)

// PossibleWorkloadMonitorActionTypeValues returns an array of possible values for the WorkloadMonitorActionType const type.
func PossibleWorkloadMonitorActionTypeValues() []WorkloadMonitorActionType {
	return []WorkloadMonitorActionType{WorkloadMonitorActionTypeInternal, WorkloadMonitorActionTypeNotSpecified}
}

// WorkloadMonitorProvisioningState enumerates the values for workload monitor provisioning state.
type WorkloadMonitorProvisioningState string

const (
	// WorkloadMonitorProvisioningStateAccepted ...
	WorkloadMonitorProvisioningStateAccepted WorkloadMonitorProvisioningState = "Accepted"
	// WorkloadMonitorProvisioningStateCreating ...
	WorkloadMonitorProvisioningStateCreating WorkloadMonitorProvisioningState = "Creating"
	// WorkloadMonitorProvisioningStateDeleting ...
	WorkloadMonitorProvisioningStateDeleting WorkloadMonitorProvisioningState = "Deleting"
	// WorkloadMonitorProvisioningStateFailed ...
	WorkloadMonitorProvisioningStateFailed WorkloadMonitorProvisioningState = "Failed"
	// WorkloadMonitorProvisioningStateMigrating ...
	WorkloadMonitorProvisioningStateMigrating WorkloadMonitorProvisioningState = "Migrating"
	// WorkloadMonitorProvisioningStateSucceeded ...
	WorkloadMonitorProvisioningStateSucceeded WorkloadMonitorProvisioningState = "Succeeded"
	// WorkloadMonitorProvisioningStateUpdating ...
	WorkloadMonitorProvisioningStateUpdating WorkloadMonitorProvisioningState = "Updating"
)

// PossibleWorkloadMonitorProvisioningStateValues returns an array of possible values for the WorkloadMonitorProvisioningState const type.
func PossibleWorkloadMonitorProvisioningStateValues() []WorkloadMonitorProvisioningState {
	return []WorkloadMonitorProvisioningState{WorkloadMonitorProvisioningStateAccepted, WorkloadMonitorProvisioningStateCreating, WorkloadMonitorProvisioningStateDeleting, WorkloadMonitorProvisioningStateFailed, WorkloadMonitorProvisioningStateMigrating, WorkloadMonitorProvisioningStateSucceeded, WorkloadMonitorProvisioningStateUpdating}
}
