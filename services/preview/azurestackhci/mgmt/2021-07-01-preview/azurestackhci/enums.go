package azurestackhci

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// ActionType enumerates the values for action type.
type ActionType string

const (
	// Internal ...
	Internal ActionType = "Internal"
)

// PossibleActionTypeValues returns an array of possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{Internal}
}

// CreatedByType enumerates the values for created by type.
type CreatedByType string

const (
	// Application ...
	Application CreatedByType = "Application"
	// Key ...
	Key CreatedByType = "Key"
	// ManagedIdentity ...
	ManagedIdentity CreatedByType = "ManagedIdentity"
	// User ...
	User CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns an array of possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{Application, Key, ManagedIdentity, User}
}

// ExtendedLocationTypes enumerates the values for extended location types.
type ExtendedLocationTypes string

const (
	// EdgeZone ...
	EdgeZone ExtendedLocationTypes = "EdgeZone"
)

// PossibleExtendedLocationTypesValues returns an array of possible values for the ExtendedLocationTypes const type.
func PossibleExtendedLocationTypesValues() []ExtendedLocationTypes {
	return []ExtendedLocationTypes{EdgeZone}
}

// IPAllocationMethodEnum enumerates the values for ip allocation method enum.
type IPAllocationMethodEnum string

const (
	// Dynamic ...
	Dynamic IPAllocationMethodEnum = "Dynamic"
	// Static ...
	Static IPAllocationMethodEnum = "Static"
)

// PossibleIPAllocationMethodEnumValues returns an array of possible values for the IPAllocationMethodEnum const type.
func PossibleIPAllocationMethodEnumValues() []IPAllocationMethodEnum {
	return []IPAllocationMethodEnum{Dynamic, Static}
}

// IPPoolTypeEnum enumerates the values for ip pool type enum.
type IPPoolTypeEnum string

const (
	// Vippool ...
	Vippool IPPoolTypeEnum = "vippool"
	// VM ...
	VM IPPoolTypeEnum = "vm"
)

// PossibleIPPoolTypeEnumValues returns an array of possible values for the IPPoolTypeEnum const type.
func PossibleIPPoolTypeEnumValues() []IPPoolTypeEnum {
	return []IPPoolTypeEnum{Vippool, VM}
}

// NetworkTypeEnum enumerates the values for network type enum.
type NetworkTypeEnum string

const (
	// NetworkTypeEnumICS ...
	NetworkTypeEnumICS NetworkTypeEnum = "ICS"
	// NetworkTypeEnumInternal ...
	NetworkTypeEnumInternal NetworkTypeEnum = "Internal"
	// NetworkTypeEnumL2Bridge ...
	NetworkTypeEnumL2Bridge NetworkTypeEnum = "L2Bridge"
	// NetworkTypeEnumL2Tunnel ...
	NetworkTypeEnumL2Tunnel NetworkTypeEnum = "L2Tunnel"
	// NetworkTypeEnumMirrored ...
	NetworkTypeEnumMirrored NetworkTypeEnum = "Mirrored"
	// NetworkTypeEnumNAT ...
	NetworkTypeEnumNAT NetworkTypeEnum = "NAT"
	// NetworkTypeEnumOverlay ...
	NetworkTypeEnumOverlay NetworkTypeEnum = "Overlay"
	// NetworkTypeEnumPrivate ...
	NetworkTypeEnumPrivate NetworkTypeEnum = "Private"
	// NetworkTypeEnumTransparent ...
	NetworkTypeEnumTransparent NetworkTypeEnum = "Transparent"
)

// PossibleNetworkTypeEnumValues returns an array of possible values for the NetworkTypeEnum const type.
func PossibleNetworkTypeEnumValues() []NetworkTypeEnum {
	return []NetworkTypeEnum{NetworkTypeEnumICS, NetworkTypeEnumInternal, NetworkTypeEnumL2Bridge, NetworkTypeEnumL2Tunnel, NetworkTypeEnumMirrored, NetworkTypeEnumNAT, NetworkTypeEnumOverlay, NetworkTypeEnumPrivate, NetworkTypeEnumTransparent}
}

// OperatingSystemTypes enumerates the values for operating system types.
type OperatingSystemTypes string

const (
	// Linux ...
	Linux OperatingSystemTypes = "Linux"
	// Windows ...
	Windows OperatingSystemTypes = "Windows"
)

// PossibleOperatingSystemTypesValues returns an array of possible values for the OperatingSystemTypes const type.
func PossibleOperatingSystemTypesValues() []OperatingSystemTypes {
	return []OperatingSystemTypes{Linux, Windows}
}

// Origin enumerates the values for origin.
type Origin string

const (
	// OriginSystem ...
	OriginSystem Origin = "system"
	// OriginUser ...
	OriginUser Origin = "user"
	// OriginUsersystem ...
	OriginUsersystem Origin = "user,system"
)

// PossibleOriginValues returns an array of possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{OriginSystem, OriginUser, OriginUsersystem}
}

// OsTypeEnum enumerates the values for os type enum.
type OsTypeEnum string

const (
	// OsTypeEnumLinux ...
	OsTypeEnumLinux OsTypeEnum = "Linux"
	// OsTypeEnumWindows ...
	OsTypeEnumWindows OsTypeEnum = "Windows"
)

// PossibleOsTypeEnumValues returns an array of possible values for the OsTypeEnum const type.
func PossibleOsTypeEnumValues() []OsTypeEnum {
	return []OsTypeEnum{OsTypeEnumLinux, OsTypeEnumWindows}
}

// PowerStateEnum enumerates the values for power state enum.
type PowerStateEnum string

const (
	// Deallocated ...
	Deallocated PowerStateEnum = "Deallocated"
	// Deallocating ...
	Deallocating PowerStateEnum = "Deallocating"
	// Running ...
	Running PowerStateEnum = "Running"
	// Starting ...
	Starting PowerStateEnum = "Starting"
	// Stopped ...
	Stopped PowerStateEnum = "Stopped"
	// Stopping ...
	Stopping PowerStateEnum = "Stopping"
	// Unknown ...
	Unknown PowerStateEnum = "Unknown"
)

// PossiblePowerStateEnumValues returns an array of possible values for the PowerStateEnum const type.
func PossiblePowerStateEnumValues() []PowerStateEnum {
	return []PowerStateEnum{Deallocated, Deallocating, Running, Starting, Stopped, Stopping, Unknown}
}

// PrivateIPAllocationMethodEnum enumerates the values for private ip allocation method enum.
type PrivateIPAllocationMethodEnum string

const (
	// PrivateIPAllocationMethodEnumDynamic ...
	PrivateIPAllocationMethodEnumDynamic PrivateIPAllocationMethodEnum = "Dynamic"
	// PrivateIPAllocationMethodEnumStatic ...
	PrivateIPAllocationMethodEnumStatic PrivateIPAllocationMethodEnum = "Static"
)

// PossiblePrivateIPAllocationMethodEnumValues returns an array of possible values for the PrivateIPAllocationMethodEnum const type.
func PossiblePrivateIPAllocationMethodEnumValues() []PrivateIPAllocationMethodEnum {
	return []PrivateIPAllocationMethodEnum{PrivateIPAllocationMethodEnumDynamic, PrivateIPAllocationMethodEnumStatic}
}

// ProvisioningStateEnum enumerates the values for provisioning state enum.
type ProvisioningStateEnum string

const (
	// Accepted ...
	Accepted ProvisioningStateEnum = "Accepted"
	// Deleting ...
	Deleting ProvisioningStateEnum = "Deleting"
	// Failed ...
	Failed ProvisioningStateEnum = "Failed"
	// InProgress ...
	InProgress ProvisioningStateEnum = "InProgress"
	// Succeeded ...
	Succeeded ProvisioningStateEnum = "Succeeded"
)

// PossibleProvisioningStateEnumValues returns an array of possible values for the ProvisioningStateEnum const type.
func PossibleProvisioningStateEnumValues() []ProvisioningStateEnum {
	return []ProvisioningStateEnum{Accepted, Deleting, Failed, InProgress, Succeeded}
}

// ResourceIdentityType enumerates the values for resource identity type.
type ResourceIdentityType string

const (
	// SystemAssigned ...
	SystemAssigned ResourceIdentityType = "SystemAssigned"
)

// PossibleResourceIdentityTypeValues returns an array of possible values for the ResourceIdentityType const type.
func PossibleResourceIdentityTypeValues() []ResourceIdentityType {
	return []ResourceIdentityType{SystemAssigned}
}

// SkuTier enumerates the values for sku tier.
type SkuTier string

const (
	// Basic ...
	Basic SkuTier = "Basic"
	// Free ...
	Free SkuTier = "Free"
	// Premium ...
	Premium SkuTier = "Premium"
	// Standard ...
	Standard SkuTier = "Standard"
)

// PossibleSkuTierValues returns an array of possible values for the SkuTier const type.
func PossibleSkuTierValues() []SkuTier {
	return []SkuTier{Basic, Free, Premium, Standard}
}

// VMSizeEnum enumerates the values for vm size enum.
type VMSizeEnum string

const (
	// Custom ...
	Custom VMSizeEnum = "Custom"
	// Default ...
	Default VMSizeEnum = "Default"
	// StandardA2V2 ...
	StandardA2V2 VMSizeEnum = "Standard_A2_v2"
	// StandardA4V2 ...
	StandardA4V2 VMSizeEnum = "Standard_A4_v2"
	// StandardD16sV3 ...
	StandardD16sV3 VMSizeEnum = "Standard_D16s_v3"
	// StandardD2sV3 ...
	StandardD2sV3 VMSizeEnum = "Standard_D2s_v3"
	// StandardD32sV3 ...
	StandardD32sV3 VMSizeEnum = "Standard_D32s_v3"
	// StandardD4sV3 ...
	StandardD4sV3 VMSizeEnum = "Standard_D4s_v3"
	// StandardD8sV3 ...
	StandardD8sV3 VMSizeEnum = "Standard_D8s_v3"
	// StandardDS13V2 ...
	StandardDS13V2 VMSizeEnum = "Standard_DS13_v2"
	// StandardDS2V2 ...
	StandardDS2V2 VMSizeEnum = "Standard_DS2_v2"
	// StandardDS3V2 ...
	StandardDS3V2 VMSizeEnum = "Standard_DS3_v2"
	// StandardDS4V2 ...
	StandardDS4V2 VMSizeEnum = "Standard_DS4_v2"
	// StandardDS5V2 ...
	StandardDS5V2 VMSizeEnum = "Standard_DS5_v2"
	// StandardK8S2V1 ...
	StandardK8S2V1 VMSizeEnum = "Standard_K8S2_v1"
	// StandardK8S3V1 ...
	StandardK8S3V1 VMSizeEnum = "Standard_K8S3_v1"
	// StandardK8S4V1 ...
	StandardK8S4V1 VMSizeEnum = "Standard_K8S4_v1"
	// StandardK8S5V1 ...
	StandardK8S5V1 VMSizeEnum = "Standard_K8S5_v1"
	// StandardK8SV1 ...
	StandardK8SV1 VMSizeEnum = "Standard_K8S_v1"
	// StandardNK12 ...
	StandardNK12 VMSizeEnum = "Standard_NK12"
	// StandardNK6 ...
	StandardNK6 VMSizeEnum = "Standard_NK6"
	// StandardNV12 ...
	StandardNV12 VMSizeEnum = "Standard_NV12"
	// StandardNV6 ...
	StandardNV6 VMSizeEnum = "Standard_NV6"
)

// PossibleVMSizeEnumValues returns an array of possible values for the VMSizeEnum const type.
func PossibleVMSizeEnumValues() []VMSizeEnum {
	return []VMSizeEnum{Custom, Default, StandardA2V2, StandardA4V2, StandardD16sV3, StandardD2sV3, StandardD32sV3, StandardD4sV3, StandardD8sV3, StandardDS13V2, StandardDS2V2, StandardDS3V2, StandardDS4V2, StandardDS5V2, StandardK8S2V1, StandardK8S3V1, StandardK8S4V1, StandardK8S5V1, StandardK8SV1, StandardNK12, StandardNK6, StandardNV12, StandardNV6}
}
