package billing

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// AutoRenew enumerates the values for auto renew.
type AutoRenew string

const (
	// Off ...
	Off AutoRenew = "Off"
	// On ...
	On AutoRenew = "On"
)

// PossibleAutoRenewValues returns an array of possible values for the AutoRenew const type.
func PossibleAutoRenewValues() []AutoRenew {
	return []AutoRenew{Off, On}
}

// DetachPaymentMethodEligibilityErrorCode enumerates the values for detach payment method eligibility error
// code.
type DetachPaymentMethodEligibilityErrorCode string

const (
	// AzureSubscriptions ...
	AzureSubscriptions DetachPaymentMethodEligibilityErrorCode = "AzureSubscriptions"
	// OutstandingCharges ...
	OutstandingCharges DetachPaymentMethodEligibilityErrorCode = "OutstandingCharges"
	// PendingCharges ...
	PendingCharges DetachPaymentMethodEligibilityErrorCode = "PendingCharges"
	// RecurringCharges ...
	RecurringCharges DetachPaymentMethodEligibilityErrorCode = "RecurringCharges"
	// ReservedInstances ...
	ReservedInstances DetachPaymentMethodEligibilityErrorCode = "ReservedInstances"
)

// PossibleDetachPaymentMethodEligibilityErrorCodeValues returns an array of possible values for the DetachPaymentMethodEligibilityErrorCode const type.
func PossibleDetachPaymentMethodEligibilityErrorCodeValues() []DetachPaymentMethodEligibilityErrorCode {
	return []DetachPaymentMethodEligibilityErrorCode{AzureSubscriptions, OutstandingCharges, PendingCharges, RecurringCharges, ReservedInstances}
}

// PaymentMethodFamily enumerates the values for payment method family.
type PaymentMethodFamily string

const (
	// CheckWire ...
	CheckWire PaymentMethodFamily = "CheckWire"
	// CreditCard ...
	CreditCard PaymentMethodFamily = "CreditCard"
)

// PossiblePaymentMethodFamilyValues returns an array of possible values for the PaymentMethodFamily const type.
func PossiblePaymentMethodFamilyValues() []PaymentMethodFamily {
	return []PaymentMethodFamily{CheckWire, CreditCard}
}

// PaymentMethodStatus enumerates the values for payment method status.
type PaymentMethodStatus string

const (
	// Active ...
	Active PaymentMethodStatus = "active"
	// Inactive ...
	Inactive PaymentMethodStatus = "inactive"
)

// PossiblePaymentMethodStatusValues returns an array of possible values for the PaymentMethodStatus const type.
func PossiblePaymentMethodStatusValues() []PaymentMethodStatus {
	return []PaymentMethodStatus{Active, Inactive}
}

// SubscriptionEnrollmentAccountStatus enumerates the values for subscription enrollment account status.
type SubscriptionEnrollmentAccountStatus string

const (
	// SubscriptionEnrollmentAccountStatusActive ...
	SubscriptionEnrollmentAccountStatusActive SubscriptionEnrollmentAccountStatus = "Active"
	// SubscriptionEnrollmentAccountStatusCancelled ...
	SubscriptionEnrollmentAccountStatusCancelled SubscriptionEnrollmentAccountStatus = "Cancelled"
	// SubscriptionEnrollmentAccountStatusDeleted ...
	SubscriptionEnrollmentAccountStatusDeleted SubscriptionEnrollmentAccountStatus = "Deleted"
	// SubscriptionEnrollmentAccountStatusExpired ...
	SubscriptionEnrollmentAccountStatusExpired SubscriptionEnrollmentAccountStatus = "Expired"
	// SubscriptionEnrollmentAccountStatusTransferredOut ...
	SubscriptionEnrollmentAccountStatusTransferredOut SubscriptionEnrollmentAccountStatus = "TransferredOut"
	// SubscriptionEnrollmentAccountStatusTransferring ...
	SubscriptionEnrollmentAccountStatusTransferring SubscriptionEnrollmentAccountStatus = "Transferring"
)

// PossibleSubscriptionEnrollmentAccountStatusValues returns an array of possible values for the SubscriptionEnrollmentAccountStatus const type.
func PossibleSubscriptionEnrollmentAccountStatusValues() []SubscriptionEnrollmentAccountStatus {
	return []SubscriptionEnrollmentAccountStatus{SubscriptionEnrollmentAccountStatusActive, SubscriptionEnrollmentAccountStatusCancelled, SubscriptionEnrollmentAccountStatusDeleted, SubscriptionEnrollmentAccountStatusExpired, SubscriptionEnrollmentAccountStatusTransferredOut, SubscriptionEnrollmentAccountStatusTransferring}
}

// SubscriptionStatus enumerates the values for subscription status.
type SubscriptionStatus string

const (
	// SubscriptionStatusActive ...
	SubscriptionStatusActive SubscriptionStatus = "Active"
	// SubscriptionStatusAutoRenew ...
	SubscriptionStatusAutoRenew SubscriptionStatus = "AutoRenew"
	// SubscriptionStatusCancelled ...
	SubscriptionStatusCancelled SubscriptionStatus = "Cancelled"
	// SubscriptionStatusDeleted ...
	SubscriptionStatusDeleted SubscriptionStatus = "Deleted"
	// SubscriptionStatusDisabled ...
	SubscriptionStatusDisabled SubscriptionStatus = "Disabled"
	// SubscriptionStatusExpired ...
	SubscriptionStatusExpired SubscriptionStatus = "Expired"
	// SubscriptionStatusExpiring ...
	SubscriptionStatusExpiring SubscriptionStatus = "Expiring"
	// SubscriptionStatusSuspended ...
	SubscriptionStatusSuspended SubscriptionStatus = "Suspended"
	// SubscriptionStatusUnknown ...
	SubscriptionStatusUnknown SubscriptionStatus = "Unknown"
	// SubscriptionStatusWarned ...
	SubscriptionStatusWarned SubscriptionStatus = "Warned"
)

// PossibleSubscriptionStatusValues returns an array of possible values for the SubscriptionStatus const type.
func PossibleSubscriptionStatusValues() []SubscriptionStatus {
	return []SubscriptionStatus{SubscriptionStatusActive, SubscriptionStatusAutoRenew, SubscriptionStatusCancelled, SubscriptionStatusDeleted, SubscriptionStatusDisabled, SubscriptionStatusExpired, SubscriptionStatusExpiring, SubscriptionStatusSuspended, SubscriptionStatusUnknown, SubscriptionStatusWarned}
}

// SubscriptionTransferValidationErrorCode enumerates the values for subscription transfer validation error
// code.
type SubscriptionTransferValidationErrorCode string

const (
	// AccountIsLocked ...
	AccountIsLocked SubscriptionTransferValidationErrorCode = "AccountIsLocked"
	// AssetHasCap ...
	AssetHasCap SubscriptionTransferValidationErrorCode = "AssetHasCap"
	// AssetNotActive ...
	AssetNotActive SubscriptionTransferValidationErrorCode = "AssetNotActive"
	// BillingAccountInactive ...
	BillingAccountInactive SubscriptionTransferValidationErrorCode = "BillingAccountInactive"
	// BillingProfilePastDue ...
	BillingProfilePastDue SubscriptionTransferValidationErrorCode = "BillingProfilePastDue"
	// CrossBillingAccountNotAllowed ...
	CrossBillingAccountNotAllowed SubscriptionTransferValidationErrorCode = "CrossBillingAccountNotAllowed"
	// DestinationBillingProfileInactive ...
	DestinationBillingProfileInactive SubscriptionTransferValidationErrorCode = "DestinationBillingProfileInactive"
	// DestinationBillingProfileNotFound ...
	DestinationBillingProfileNotFound SubscriptionTransferValidationErrorCode = "DestinationBillingProfileNotFound"
	// DestinationBillingProfilePastDue ...
	DestinationBillingProfilePastDue SubscriptionTransferValidationErrorCode = "DestinationBillingProfilePastDue"
	// DestinationInvoiceSectionInactive ...
	DestinationInvoiceSectionInactive SubscriptionTransferValidationErrorCode = "DestinationInvoiceSectionInactive"
	// DestinationInvoiceSectionNotFound ...
	DestinationInvoiceSectionNotFound SubscriptionTransferValidationErrorCode = "DestinationInvoiceSectionNotFound"
	// InsufficientPermissionOnDestination ...
	InsufficientPermissionOnDestination SubscriptionTransferValidationErrorCode = "InsufficientPermissionOnDestination"
	// InsufficientPermissionOnSource ...
	InsufficientPermissionOnSource SubscriptionTransferValidationErrorCode = "InsufficientPermissionOnSource"
	// InvalidDestination ...
	InvalidDestination SubscriptionTransferValidationErrorCode = "InvalidDestination"
	// InvalidSource ...
	InvalidSource SubscriptionTransferValidationErrorCode = "InvalidSource"
	// InvoiceSectionIsRestricted ...
	InvoiceSectionIsRestricted SubscriptionTransferValidationErrorCode = "InvoiceSectionIsRestricted"
	// MarketplaceNotEnabledOnDestination ...
	MarketplaceNotEnabledOnDestination SubscriptionTransferValidationErrorCode = "MarketplaceNotEnabledOnDestination"
	// ProductInactive ...
	ProductInactive SubscriptionTransferValidationErrorCode = "ProductInactive"
	// ProductNotFound ...
	ProductNotFound SubscriptionTransferValidationErrorCode = "ProductNotFound"
	// ProductTypeNotSupported ...
	ProductTypeNotSupported SubscriptionTransferValidationErrorCode = "ProductTypeNotSupported"
	// SourceBillingProfilePastDue ...
	SourceBillingProfilePastDue SubscriptionTransferValidationErrorCode = "SourceBillingProfilePastDue"
	// SourceInvoiceSectionInactive ...
	SourceInvoiceSectionInactive SubscriptionTransferValidationErrorCode = "SourceInvoiceSectionInactive"
	// SubscriptionNotActive ...
	SubscriptionNotActive SubscriptionTransferValidationErrorCode = "SubscriptionNotActive"
	// SubscriptionTypeNotSupported ...
	SubscriptionTypeNotSupported SubscriptionTransferValidationErrorCode = "SubscriptionTypeNotSupported"
)

// PossibleSubscriptionTransferValidationErrorCodeValues returns an array of possible values for the SubscriptionTransferValidationErrorCode const type.
func PossibleSubscriptionTransferValidationErrorCodeValues() []SubscriptionTransferValidationErrorCode {
	return []SubscriptionTransferValidationErrorCode{AccountIsLocked, AssetHasCap, AssetNotActive, BillingAccountInactive, BillingProfilePastDue, CrossBillingAccountNotAllowed, DestinationBillingProfileInactive, DestinationBillingProfileNotFound, DestinationBillingProfilePastDue, DestinationInvoiceSectionInactive, DestinationInvoiceSectionNotFound, InsufficientPermissionOnDestination, InsufficientPermissionOnSource, InvalidDestination, InvalidSource, InvoiceSectionIsRestricted, MarketplaceNotEnabledOnDestination, ProductInactive, ProductNotFound, ProductTypeNotSupported, SourceBillingProfilePastDue, SourceInvoiceSectionInactive, SubscriptionNotActive, SubscriptionTypeNotSupported}
}
