//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package armapicenter

import "time"

// API entity.
type API struct {
	// API properties.
	Properties *APIProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// APICollection - Paginated collection of APIs.
type APICollection struct {
	// READ-ONLY; The link to the next page of items
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page items.
	Value []*API `json:"value,omitempty" azure:"ro"`
}

// APIDefinition - API definition entity.
type APIDefinition struct {
	// API definition properties entity.
	Properties *APIDefinitionProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// APIDefinitionCollection - Paginated collection of API definitions.
type APIDefinitionCollection struct {
	// READ-ONLY; The link to the next page of items
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page items.
	Value []*APIDefinition `json:"value,omitempty" azure:"ro"`
}

// APIDefinitionProperties - API definition properties entity.
type APIDefinitionProperties struct {
	// REQUIRED; API definition title.
	Title *string `json:"title,omitempty"`

	// API definition description.
	Description *string `json:"description,omitempty"`

	// READ-ONLY; API specification details.
	Specification *APIDefinitionPropertiesSpecification `json:"specification,omitempty" azure:"ro"`
}

// APIDefinitionPropertiesSpecification - API specification details.
type APIDefinitionPropertiesSpecification struct {
	// Specification name.
	Name *string `json:"name,omitempty"`

	// Specification version.
	Version *string `json:"version,omitempty"`
}

// APIDefinitionsClientCreateOrUpdateOptions contains the optional parameters for the APIDefinitionsClient.CreateOrUpdate
// method.
type APIDefinitionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIDefinitionsClientDeleteOptions contains the optional parameters for the APIDefinitionsClient.Delete method.
type APIDefinitionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIDefinitionsClientExportSpecificationOptions contains the optional parameters for the APIDefinitionsClient.ExportSpecification
// method.
type APIDefinitionsClientExportSpecificationOptions struct {
	// placeholder for future optional parameters
}

// APIDefinitionsClientGetOptions contains the optional parameters for the APIDefinitionsClient.Get method.
type APIDefinitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIDefinitionsClientHeadOptions contains the optional parameters for the APIDefinitionsClient.Head method.
type APIDefinitionsClientHeadOptions struct {
	// placeholder for future optional parameters
}

// APIDefinitionsClientImportSpecificationOptions contains the optional parameters for the APIDefinitionsClient.ImportSpecification
// method.
type APIDefinitionsClientImportSpecificationOptions struct {
	// placeholder for future optional parameters
}

// APIDefinitionsClientListOptions contains the optional parameters for the APIDefinitionsClient.List method.
type APIDefinitionsClientListOptions struct {
}

// APIProperties - API properties.
type APIProperties struct {
	// REQUIRED; Kind of API. For example, REST or GraphQL.
	Kind *APIKind `json:"kind,omitempty"`

	// REQUIRED; API title.
	Title    *string    `json:"title,omitempty"`
	Contacts []*Contact `json:"contacts,omitempty"`

	// The custom metadata defined for API catalog entities.
	CustomProperties interface{} `json:"customProperties,omitempty"`

	// Description of the API.
	Description           *string                  `json:"description,omitempty"`
	ExternalDocumentation []*ExternalDocumentation `json:"externalDocumentation,omitempty"`

	// The license information for the API.
	License *License `json:"license,omitempty"`

	// Short description of the API.
	Summary *string `json:"summary,omitempty"`

	// Terms of service for the API.
	TermsOfService *TermsOfService `json:"termsOfService,omitempty"`

	// READ-ONLY; Current lifecycle stage of the API.
	LifecycleStage *LifecycleStage `json:"lifecycleStage,omitempty" azure:"ro"`
}

// APISpecExportResult - The API specification export result.
type APISpecExportResult struct {
	Format *APISpecExportResultFormat `json:"format,omitempty"`

	// The result of the export operation.
	Value *string `json:"value,omitempty"`
}

// APISpecImportRequest - The API specification source entity properties.
type APISpecImportRequest struct {
	// Format of the API specification source.
	Format *APISpecImportSourceFormat `json:"format,omitempty"`

	// API specification details.
	Specification *APISpecImportRequestSpecification `json:"specification,omitempty"`

	// Value of the API specification source.
	Value *string `json:"value,omitempty"`
}

// APISpecImportRequestSpecification - API specification details.
type APISpecImportRequestSpecification struct {
	// Specification name.
	Name *string `json:"name,omitempty"`

	// Specification version.
	Version *string `json:"version,omitempty"`
}

// APIVersion - API version entity.
type APIVersion struct {
	// API version properties entity.
	Properties *APIVersionProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// APIVersionCollection - Paginated collection of API versions.
type APIVersionCollection struct {
	// READ-ONLY; The link to the next page of items
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page items.
	Value []*APIVersion `json:"value,omitempty" azure:"ro"`
}

// APIVersionProperties - API version properties entity.
type APIVersionProperties struct {
	// REQUIRED; Current lifecycle stage of the API.
	LifecycleStage *LifecycleStage `json:"lifecycleStage,omitempty"`

	// REQUIRED; API version title.
	Title *string `json:"title,omitempty"`
}

// APIVersionsClientCreateOrUpdateOptions contains the optional parameters for the APIVersionsClient.CreateOrUpdate method.
type APIVersionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// APIVersionsClientDeleteOptions contains the optional parameters for the APIVersionsClient.Delete method.
type APIVersionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// APIVersionsClientGetOptions contains the optional parameters for the APIVersionsClient.Get method.
type APIVersionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// APIVersionsClientHeadOptions contains the optional parameters for the APIVersionsClient.Head method.
type APIVersionsClientHeadOptions struct {
	// placeholder for future optional parameters
}

// APIVersionsClientListOptions contains the optional parameters for the APIVersionsClient.List method.
type APIVersionsClientListOptions struct {
}

// ApisClientCreateOrUpdateOptions contains the optional parameters for the ApisClient.CreateOrUpdate method.
type ApisClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ApisClientDeleteOptions contains the optional parameters for the ApisClient.Delete method.
type ApisClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ApisClientGetOptions contains the optional parameters for the ApisClient.Get method.
type ApisClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApisClientHeadOptions contains the optional parameters for the ApisClient.Head method.
type ApisClientHeadOptions struct {
	// placeholder for future optional parameters
}

// ApisClientListOptions contains the optional parameters for the ApisClient.List method.
type ApisClientListOptions struct {
}

type Contact struct {
	// Email address of the contact.
	Email *string `json:"email,omitempty"`

	// Name of the contact.
	Name *string `json:"name,omitempty"`

	// URL for the contact.
	URL *string `json:"url,omitempty"`
}

// Deployment - API deployment entity.
type Deployment struct {
	// API deployment entity properties.
	Properties *DeploymentProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// DeploymentCollection - Paginated collection of API deployments.
type DeploymentCollection struct {
	// READ-ONLY; The link to the next page of items
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page items.
	Value []*Deployment `json:"value,omitempty" azure:"ro"`
}

// DeploymentProperties - API deployment entity properties.
type DeploymentProperties struct {
	// The custom metadata defined for API catalog entities.
	CustomProperties interface{} `json:"customProperties,omitempty"`

	// API center-scoped definition resource ID.
	DefinitionID *string `json:"definitionId,omitempty"`

	// Description of the deployment.
	Description *string `json:"description,omitempty"`

	// API center-scoped environment resource ID.
	EnvironmentID *string `json:"environmentId,omitempty"`

	// Server
	Server *DeploymentServer `json:"server,omitempty"`

	// State of API deployment.
	State *DeploymentState `json:"state,omitempty"`

	// API deployment title
	Title *string `json:"title,omitempty"`
}

// DeploymentServer - Server
type DeploymentServer struct {
	// Base runtime URLs for this deployment.
	RuntimeURI []*string `json:"runtimeUri,omitempty"`
}

// DeploymentsClientCreateOrUpdateOptions contains the optional parameters for the DeploymentsClient.CreateOrUpdate method.
type DeploymentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientDeleteOptions contains the optional parameters for the DeploymentsClient.Delete method.
type DeploymentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientGetOptions contains the optional parameters for the DeploymentsClient.Get method.
type DeploymentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientHeadOptions contains the optional parameters for the DeploymentsClient.Head method.
type DeploymentsClientHeadOptions struct {
	// placeholder for future optional parameters
}

// DeploymentsClientListOptions contains the optional parameters for the DeploymentsClient.List method.
type DeploymentsClientListOptions struct {
}

// Environment entity.
type Environment struct {
	// Environment properties entity.
	Properties *EnvironmentProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// EnvironmentCollection - Paginated collection of environments.
type EnvironmentCollection struct {
	// READ-ONLY; The link to the next page of items
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page items.
	Value []*Environment `json:"value,omitempty" azure:"ro"`
}

// EnvironmentProperties - Environment properties entity.
type EnvironmentProperties struct {
	// REQUIRED; Environment kind.
	Kind *EnvironmentKind `json:"kind,omitempty"`

	// REQUIRED; Environment title.
	Title *string `json:"title,omitempty"`

	// The custom metadata defined for API catalog entities.
	CustomProperties interface{} `json:"customProperties,omitempty"`

	// Description.
	Description *string     `json:"description,omitempty"`
	Onboarding  *Onboarding `json:"onboarding,omitempty"`

	// Server information of the environment.
	Server *EnvironmentServer `json:"server,omitempty"`
}

// EnvironmentServer - Server information of the environment.
type EnvironmentServer struct {
	ManagementPortalURI []*string `json:"managementPortalUri,omitempty"`

	// Type of the server that represents the environment.
	Type *EnvironmentServerType `json:"type,omitempty"`
}

// EnvironmentsClientCreateOrUpdateOptions contains the optional parameters for the EnvironmentsClient.CreateOrUpdate method.
type EnvironmentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientDeleteOptions contains the optional parameters for the EnvironmentsClient.Delete method.
type EnvironmentsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientGetOptions contains the optional parameters for the EnvironmentsClient.Get method.
type EnvironmentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientHeadOptions contains the optional parameters for the EnvironmentsClient.Head method.
type EnvironmentsClientHeadOptions struct {
	// placeholder for future optional parameters
}

// EnvironmentsClientListOptions contains the optional parameters for the EnvironmentsClient.List method.
type EnvironmentsClientListOptions struct {
}

// ExternalDocumentation - Additional, external documentation for the API.
type ExternalDocumentation struct {
	// REQUIRED; URL pointing to the documentation.
	URL *string `json:"url,omitempty"`

	// Description of the documentation.
	Description *string `json:"description,omitempty"`

	// Title of the documentation.
	Title *string `json:"title,omitempty"`
}

// License - The license information for the API.
type License struct {
	// SPDX license information for the API. The identifier field is mutually exclusive of the URL field.
	Identifier *string `json:"identifier,omitempty"`

	// Name of the license.
	Name *string `json:"name,omitempty"`

	// URL pointing to the license details. The URL field is mutually exclusive of the identifier field.
	URL *string `json:"url,omitempty"`
}

// ManagedServiceIdentity - Managed service identity (system assigned and/or user assigned identities)
type ManagedServiceIdentity struct {
	// REQUIRED; Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
	Type *ManagedServiceIdentityType `json:"type,omitempty"`

	// The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM
	// resource ids in the form:
	// '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.
	// The dictionary values can be empty objects ({}) in
	// requests.
	UserAssignedIdentities map[string]*UserAssignedIdentity `json:"userAssignedIdentities,omitempty"`

	// READ-ONLY; The service principal ID of the system assigned identity. This property will only be provided for a system assigned
	// identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`

	// READ-ONLY; The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantID *string `json:"tenantId,omitempty" azure:"ro"`
}

type MetadataAssignment struct {
	Deprecated *bool `json:"deprecated,omitempty"`

	// The entities this metadata schema component gets applied to.
	Entity   *MetadataAssignmentEntity `json:"entity,omitempty"`
	Required *bool                     `json:"required,omitempty"`
}

// MetadataSchema - Metadata schema entity. Used to define metadata for the entities in API catalog.
type MetadataSchema struct {
	// Metadata schema properties.
	Properties *MetadataSchemaProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MetadataSchemaCollection - Paginated collection of metadata schemas.
type MetadataSchemaCollection struct {
	// READ-ONLY; The link to the next page of items
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page items.
	Value []*MetadataSchema `json:"value,omitempty" azure:"ro"`
}

// MetadataSchemaExportRequest - The metadata schema export request.
type MetadataSchemaExportRequest struct {
	// An entity the metadata schema is requested for.
	AssignedTo *MetadataAssignmentEntity `json:"assignedTo,omitempty"`
}

// MetadataSchemaExportResult - The metadata schema export result.
type MetadataSchemaExportResult struct {
	Format *MetadataSchemaExportFormat `json:"format,omitempty"`

	// The result of the export operation.
	Value *string `json:"value,omitempty"`
}

// MetadataSchemaProperties - Metadata schema properties.
type MetadataSchemaProperties struct {
	// REQUIRED; The schema defining the type.
	Schema     *string               `json:"schema,omitempty"`
	AssignedTo []*MetadataAssignment `json:"assignedTo,omitempty"`
}

// MetadataSchemasClientCreateOrUpdateOptions contains the optional parameters for the MetadataSchemasClient.CreateOrUpdate
// method.
type MetadataSchemasClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// MetadataSchemasClientDeleteOptions contains the optional parameters for the MetadataSchemasClient.Delete method.
type MetadataSchemasClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// MetadataSchemasClientGetOptions contains the optional parameters for the MetadataSchemasClient.Get method.
type MetadataSchemasClientGetOptions struct {
	// placeholder for future optional parameters
}

// MetadataSchemasClientHeadOptions contains the optional parameters for the MetadataSchemasClient.Head method.
type MetadataSchemasClientHeadOptions struct {
	// placeholder for future optional parameters
}

// MetadataSchemasClientListOptions contains the optional parameters for the MetadataSchemasClient.List method.
type MetadataSchemasClientListOptions struct {
}

type Onboarding struct {
	DeveloperPortalURI []*string `json:"developerPortalUri,omitempty"`

	// Onboarding guide.
	Instructions *string `json:"instructions,omitempty"`
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType `json:"actionType,omitempty" azure:"ro"`

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool `json:"isDataAction,omitempty" azure:"ro"`

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin `json:"origin,omitempty" azure:"ro"`
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation `json:"value,omitempty" azure:"ro"`
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// Service - The service entity.
type Service struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Managed service identity (system assigned and/or user assigned identities)
	Identity *ManagedServiceIdentity `json:"identity,omitempty"`

	// The properties of the service.
	Properties *ServiceProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ServiceCollection - The response of a Service list operation.
type ServiceCollection struct {
	// REQUIRED; The Service items on this page
	Value []*Service `json:"value,omitempty"`

	// The link to the next page of items
	NextLink *string `json:"nextLink,omitempty"`
}

// ServiceProperties - The properties of the service.
type ServiceProperties struct {
	// READ-ONLY; Provisioning state of the service.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// ServiceUpdate - The service properties to be updated.
type ServiceUpdate struct {
	// The properties of the service.
	Properties *ServiceProperties `json:"properties,omitempty"`
}

// ServicesClientCreateOrUpdateOptions contains the optional parameters for the ServicesClient.CreateOrUpdate method.
type ServicesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientDeleteOptions contains the optional parameters for the ServicesClient.Delete method.
type ServicesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientExportMetadataSchemaOptions contains the optional parameters for the ServicesClient.ExportMetadataSchema
// method.
type ServicesClientExportMetadataSchemaOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientGetOptions contains the optional parameters for the ServicesClient.Get method.
type ServicesClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientListByResourceGroupOptions contains the optional parameters for the ServicesClient.ListByResourceGroup method.
type ServicesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientListBySubscriptionOptions contains the optional parameters for the ServicesClient.ListBySubscription method.
type ServicesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ServicesClientUpdateOptions contains the optional parameters for the ServicesClient.Update method.
type ServicesClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// TermsOfService - Terms of service for the API.
type TermsOfService struct {
	// REQUIRED; URL pointing to the terms of service.
	URL *string `json:"url,omitempty"`
}

// UserAssignedIdentity - User assigned identity properties
type UserAssignedIdentity struct {
	// READ-ONLY; The client ID of the assigned identity.
	ClientID *string `json:"clientId,omitempty" azure:"ro"`

	// READ-ONLY; The principal ID of the assigned identity.
	PrincipalID *string `json:"principalId,omitempty" azure:"ro"`
}

// Workspace entity.
type Workspace struct {
	// Workspace properties.
	Properties *WorkspaceProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// WorkspaceCollection - Paginated collection of workspaces.
type WorkspaceCollection struct {
	// READ-ONLY; The link to the next page of items
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; Page items.
	Value []*Workspace `json:"value,omitempty" azure:"ro"`
}

// WorkspaceProperties - Workspace properties.
type WorkspaceProperties struct {
	// REQUIRED; Workspace title.
	Title *string `json:"title,omitempty"`

	// Workspace description.
	Description *string `json:"description,omitempty"`
}

// WorkspacesClientCreateOrUpdateOptions contains the optional parameters for the WorkspacesClient.CreateOrUpdate method.
type WorkspacesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientDeleteOptions contains the optional parameters for the WorkspacesClient.Delete method.
type WorkspacesClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientGetOptions contains the optional parameters for the WorkspacesClient.Get method.
type WorkspacesClientGetOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientHeadOptions contains the optional parameters for the WorkspacesClient.Head method.
type WorkspacesClientHeadOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientListOptions contains the optional parameters for the WorkspacesClient.List method.
type WorkspacesClientListOptions struct {
}
