//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armsingularity

const (
	moduleName    = "armsingularity"
	moduleVersion = "v0.1.0"
)

type AccountStatus string

const (
	AccountStatusCreated  AccountStatus = "Created"
	AccountStatusCreating AccountStatus = "Creating"
	AccountStatusDeleting AccountStatus = "Deleting"
	AccountStatusFailed   AccountStatus = "Failed"
	AccountStatusUpdating AccountStatus = "Updating"
)

// PossibleAccountStatusValues returns the possible values for the AccountStatus const type.
func PossibleAccountStatusValues() []AccountStatus {
	return []AccountStatus{
		AccountStatusCreated,
		AccountStatusCreating,
		AccountStatusDeleting,
		AccountStatusFailed,
		AccountStatusUpdating,
	}
}

// ToPtr returns a *AccountStatus pointing to the current value.
func (c AccountStatus) ToPtr() *AccountStatus {
	return &c
}

type CheckpointRetentionMode string

const (
	CheckpointRetentionModeMaxStorage CheckpointRetentionMode = "MaxStorage"
	CheckpointRetentionModeTTL        CheckpointRetentionMode = "Ttl"
)

// PossibleCheckpointRetentionModeValues returns the possible values for the CheckpointRetentionMode const type.
func PossibleCheckpointRetentionModeValues() []CheckpointRetentionMode {
	return []CheckpointRetentionMode{
		CheckpointRetentionModeMaxStorage,
		CheckpointRetentionModeTTL,
	}
}

// ToPtr returns a *CheckpointRetentionMode pointing to the current value.
func (c CheckpointRetentionMode) ToPtr() *CheckpointRetentionMode {
	return &c
}

type CompilationPolicyKind string

const (
	CompilationPolicyKindAOT CompilationPolicyKind = "AOT"
	CompilationPolicyKindJIT CompilationPolicyKind = "JIT"
)

// PossibleCompilationPolicyKindValues returns the possible values for the CompilationPolicyKind const type.
func PossibleCompilationPolicyKindValues() []CompilationPolicyKind {
	return []CompilationPolicyKind{
		CompilationPolicyKindAOT,
		CompilationPolicyKindJIT,
	}
}

// ToPtr returns a *CompilationPolicyKind pointing to the current value.
func (c CompilationPolicyKind) ToPtr() *CompilationPolicyKind {
	return &c
}

type ContainerImageKind string

const (
	ContainerImageKindCustom   ContainerImageKind = "Custom"
	ContainerImageKindPlatform ContainerImageKind = "Platform"
)

// PossibleContainerImageKindValues returns the possible values for the ContainerImageKind const type.
func PossibleContainerImageKindValues() []ContainerImageKind {
	return []ContainerImageKind{
		ContainerImageKindCustom,
		ContainerImageKindPlatform,
	}
}

// ToPtr returns a *ContainerImageKind pointing to the current value.
func (c ContainerImageKind) ToPtr() *ContainerImageKind {
	return &c
}

type IdleResourcesHandlingMode string

const (
	IdleResourcesHandlingModeAutoDelete  IdleResourcesHandlingMode = "AutoDelete"
	IdleResourcesHandlingModeAutoSuspend IdleResourcesHandlingMode = "AutoSuspend"
)

// PossibleIdleResourcesHandlingModeValues returns the possible values for the IdleResourcesHandlingMode const type.
func PossibleIdleResourcesHandlingModeValues() []IdleResourcesHandlingMode {
	return []IdleResourcesHandlingMode{
		IdleResourcesHandlingModeAutoDelete,
		IdleResourcesHandlingModeAutoSuspend,
	}
}

// ToPtr returns a *IdleResourcesHandlingMode pointing to the current value.
func (c IdleResourcesHandlingMode) ToPtr() *IdleResourcesHandlingMode {
	return &c
}

type InferenceMode string

const (
	InferenceModeBatch  InferenceMode = "Batch"
	InferenceModeOnline InferenceMode = "Online"
)

// PossibleInferenceModeValues returns the possible values for the InferenceMode const type.
func PossibleInferenceModeValues() []InferenceMode {
	return []InferenceMode{
		InferenceModeBatch,
		InferenceModeOnline,
	}
}

// ToPtr returns a *InferenceMode pointing to the current value.
func (c InferenceMode) ToPtr() *InferenceMode {
	return &c
}

type JobStatus string

const (
	JobStatusCanceled    JobStatus = "Canceled"
	JobStatusCompleted   JobStatus = "Completed"
	JobStatusFailed      JobStatus = "Failed"
	JobStatusInitialized JobStatus = "Initialized"
	JobStatusRunning     JobStatus = "Running"
	JobStatusSuspended   JobStatus = "Suspended"
)

// PossibleJobStatusValues returns the possible values for the JobStatus const type.
func PossibleJobStatusValues() []JobStatus {
	return []JobStatus{
		JobStatusCanceled,
		JobStatusCompleted,
		JobStatusFailed,
		JobStatusInitialized,
		JobStatusRunning,
		JobStatusSuspended,
	}
}

// ToPtr returns a *JobStatus pointing to the current value.
func (c JobStatus) ToPtr() *JobStatus {
	return &c
}

type ModelStatus string

const (
	ModelStatusCreating                     ModelStatus = "Creating"
	ModelStatusDeleting                     ModelStatus = "Deleting"
	ModelStatusDeploymentCompletedWithError ModelStatus = "DeploymentCompletedWithError"
	ModelStatusFailed                       ModelStatus = "Failed"
	ModelStatusReady                        ModelStatus = "Ready"
	ModelStatusUpdating                     ModelStatus = "Updating"
)

// PossibleModelStatusValues returns the possible values for the ModelStatus const type.
func PossibleModelStatusValues() []ModelStatus {
	return []ModelStatus{
		ModelStatusCreating,
		ModelStatusDeleting,
		ModelStatusDeploymentCompletedWithError,
		ModelStatusFailed,
		ModelStatusReady,
		ModelStatusUpdating,
	}
}

// ToPtr returns a *ModelStatus pointing to the current value.
func (c ModelStatus) ToPtr() *ModelStatus {
	return &c
}

type MountOptionsKind string

const (
	MountOptionsKindFuse         MountOptionsKind = "Fuse"
	MountOptionsKindInterception MountOptionsKind = "Interception"
)

// PossibleMountOptionsKindValues returns the possible values for the MountOptionsKind const type.
func PossibleMountOptionsKindValues() []MountOptionsKind {
	return []MountOptionsKind{
		MountOptionsKindFuse,
		MountOptionsKindInterception,
	}
}

// ToPtr returns a *MountOptionsKind pointing to the current value.
func (c MountOptionsKind) ToPtr() *MountOptionsKind {
	return &c
}

type NetworkKind string

const (
	NetworkKindDelegatedSubnet NetworkKind = "DelegatedSubnet"
)

// PossibleNetworkKindValues returns the possible values for the NetworkKind const type.
func PossibleNetworkKindValues() []NetworkKind {
	return []NetworkKind{
		NetworkKindDelegatedSubnet,
	}
}

// ToPtr returns a *NetworkKind pointing to the current value.
func (c NetworkKind) ToPtr() *NetworkKind {
	return &c
}

type NetworkResourceStatus string

const (
	NetworkResourceStatusCreated  NetworkResourceStatus = "Created"
	NetworkResourceStatusCreating NetworkResourceStatus = "Creating"
	NetworkResourceStatusDeleting NetworkResourceStatus = "Deleting"
	NetworkResourceStatusUnknown  NetworkResourceStatus = "Unknown"
)

// PossibleNetworkResourceStatusValues returns the possible values for the NetworkResourceStatus const type.
func PossibleNetworkResourceStatusValues() []NetworkResourceStatus {
	return []NetworkResourceStatus{
		NetworkResourceStatusCreated,
		NetworkResourceStatusCreating,
		NetworkResourceStatusDeleting,
		NetworkResourceStatusUnknown,
	}
}

// ToPtr returns a *NetworkResourceStatus pointing to the current value.
func (c NetworkResourceStatus) ToPtr() *NetworkResourceStatus {
	return &c
}

type PolicyStatus string

const (
	PolicyStatusCreated  PolicyStatus = "Created"
	PolicyStatusCreating PolicyStatus = "Creating"
	PolicyStatusDeleting PolicyStatus = "Deleting"
	PolicyStatusFailed   PolicyStatus = "Failed"
	PolicyStatusUpdating PolicyStatus = "Updating"
)

// PossiblePolicyStatusValues returns the possible values for the PolicyStatus const type.
func PossiblePolicyStatusValues() []PolicyStatus {
	return []PolicyStatus{
		PolicyStatusCreated,
		PolicyStatusCreating,
		PolicyStatusDeleting,
		PolicyStatusFailed,
		PolicyStatusUpdating,
	}
}

// ToPtr returns a *PolicyStatus pointing to the current value.
func (c PolicyStatus) ToPtr() *PolicyStatus {
	return &c
}

type ProbeSettingKind string

const (
	ProbeSettingKindExec ProbeSettingKind = "Exec"
	ProbeSettingKindHTTP ProbeSettingKind = "Http"
)

// PossibleProbeSettingKindValues returns the possible values for the ProbeSettingKind const type.
func PossibleProbeSettingKindValues() []ProbeSettingKind {
	return []ProbeSettingKind{
		ProbeSettingKindExec,
		ProbeSettingKindHTTP,
	}
}

// ToPtr returns a *ProbeSettingKind pointing to the current value.
func (c ProbeSettingKind) ToPtr() *ProbeSettingKind {
	return &c
}

type ProtocolType string

const (
	ProtocolTypeHTTPS     ProtocolType = "Https"
	ProtocolTypeSSH       ProtocolType = "Ssh"
	ProtocolTypeTCP       ProtocolType = "Tcp"
	ProtocolTypeWebSocket ProtocolType = "WebSocket"
)

// PossibleProtocolTypeValues returns the possible values for the ProtocolType const type.
func PossibleProtocolTypeValues() []ProtocolType {
	return []ProtocolType{
		ProtocolTypeHTTPS,
		ProtocolTypeSSH,
		ProtocolTypeTCP,
		ProtocolTypeWebSocket,
	}
}

// ToPtr returns a *ProtocolType pointing to the current value.
func (c ProtocolType) ToPtr() *ProtocolType {
	return &c
}

type ProvisioningState string

const (
	ProvisioningStateCanceling  ProvisioningState = "Canceling"
	ProvisioningStateCreating   ProvisioningState = "Creating"
	ProvisioningStateDeleting   ProvisioningState = "Deleting"
	ProvisioningStateFailed     ProvisioningState = "Failed"
	ProvisioningStateResuming   ProvisioningState = "Resuming"
	ProvisioningStateSucceeded  ProvisioningState = "Succeeded"
	ProvisioningStateSuspending ProvisioningState = "Suspending"
	ProvisioningStateUpdating   ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateCanceling,
		ProvisioningStateCreating,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateResuming,
		ProvisioningStateSucceeded,
		ProvisioningStateSuspending,
		ProvisioningStateUpdating,
	}
}

// ToPtr returns a *ProvisioningState pointing to the current value.
func (c ProvisioningState) ToPtr() *ProvisioningState {
	return &c
}

type SLATier string

const (
	SLATierBasic    SLATier = "Basic"
	SLATierPremium  SLATier = "Premium"
	SLATierStandard SLATier = "Standard"
)

// PossibleSLATierValues returns the possible values for the SLATier const type.
func PossibleSLATierValues() []SLATier {
	return []SLATier{
		SLATierBasic,
		SLATierPremium,
		SLATierStandard,
	}
}

// ToPtr returns a *SLATier pointing to the current value.
func (c SLATier) ToPtr() *SLATier {
	return &c
}

type SchedulingPriority string

const (
	SchedulingPriorityHigh   SchedulingPriority = "High"
	SchedulingPriorityLow    SchedulingPriority = "Low"
	SchedulingPriorityMedium SchedulingPriority = "Medium"
)

// PossibleSchedulingPriorityValues returns the possible values for the SchedulingPriority const type.
func PossibleSchedulingPriorityValues() []SchedulingPriority {
	return []SchedulingPriority{
		SchedulingPriorityHigh,
		SchedulingPriorityLow,
		SchedulingPriorityMedium,
	}
}

// ToPtr returns a *SchedulingPriority pointing to the current value.
func (c SchedulingPriority) ToPtr() *SchedulingPriority {
	return &c
}

type StorageAuthenticationType string

const (
	StorageAuthenticationTypeNone                   StorageAuthenticationType = "None"
	StorageAuthenticationTypeSasToken               StorageAuthenticationType = "SasToken"
	StorageAuthenticationTypeStorageAccountKey      StorageAuthenticationType = "StorageAccountKey"
	StorageAuthenticationTypeSystemAssignedIdentity StorageAuthenticationType = "SystemAssignedIdentity"
	StorageAuthenticationTypeUserAssignedIdentity   StorageAuthenticationType = "UserAssignedIdentity"
)

// PossibleStorageAuthenticationTypeValues returns the possible values for the StorageAuthenticationType const type.
func PossibleStorageAuthenticationTypeValues() []StorageAuthenticationType {
	return []StorageAuthenticationType{
		StorageAuthenticationTypeNone,
		StorageAuthenticationTypeSasToken,
		StorageAuthenticationTypeStorageAccountKey,
		StorageAuthenticationTypeSystemAssignedIdentity,
		StorageAuthenticationTypeUserAssignedIdentity,
	}
}

// ToPtr returns a *StorageAuthenticationType pointing to the current value.
func (c StorageAuthenticationType) ToPtr() *StorageAuthenticationType {
	return &c
}

type StorageCacheKind string

const (
	StorageCacheKindADLS StorageCacheKind = "ADLS"
	StorageCacheKindBlob StorageCacheKind = "Blob"
	StorageCacheKindNFS  StorageCacheKind = "NFS"
)

// PossibleStorageCacheKindValues returns the possible values for the StorageCacheKind const type.
func PossibleStorageCacheKindValues() []StorageCacheKind {
	return []StorageCacheKind{
		StorageCacheKindADLS,
		StorageCacheKindBlob,
		StorageCacheKindNFS,
	}
}

// ToPtr returns a *StorageCacheKind pointing to the current value.
func (c StorageCacheKind) ToPtr() *StorageCacheKind {
	return &c
}

type StorageCacheStatus string

const (
	StorageCacheStatusCreated   StorageCacheStatus = "Created"
	StorageCacheStatusCreating  StorageCacheStatus = "Creating"
	StorageCacheStatusDeleting  StorageCacheStatus = "Deleting"
	StorageCacheStatusSuspended StorageCacheStatus = "Suspended"
	StorageCacheStatusUnknown   StorageCacheStatus = "Unknown"
)

// PossibleStorageCacheStatusValues returns the possible values for the StorageCacheStatus const type.
func PossibleStorageCacheStatusValues() []StorageCacheStatus {
	return []StorageCacheStatus{
		StorageCacheStatusCreated,
		StorageCacheStatusCreating,
		StorageCacheStatusDeleting,
		StorageCacheStatusSuspended,
		StorageCacheStatusUnknown,
	}
}

// ToPtr returns a *StorageCacheStatus pointing to the current value.
func (c StorageCacheStatus) ToPtr() *StorageCacheStatus {
	return &c
}

type StorageSourceKind string

const (
	StorageSourceKindAzureAISupercomputerStorage StorageSourceKind = "AzureAISupercomputerStorage"
	StorageSourceKindAzureBlobStorage            StorageSourceKind = "AzureBlobStorage"
)

// PossibleStorageSourceKindValues returns the possible values for the StorageSourceKind const type.
func PossibleStorageSourceKindValues() []StorageSourceKind {
	return []StorageSourceKind{
		StorageSourceKindAzureAISupercomputerStorage,
		StorageSourceKindAzureBlobStorage,
	}
}

// ToPtr returns a *StorageSourceKind pointing to the current value.
func (c StorageSourceKind) ToPtr() *StorageSourceKind {
	return &c
}
