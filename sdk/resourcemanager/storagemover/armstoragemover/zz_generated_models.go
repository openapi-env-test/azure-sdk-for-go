//go:build go1.16
// +build go1.16

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armstoragemover

import (
	"encoding/json"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"reflect"
	"time"
)

// Agent - The agent resource.
type Agent struct {
	Properties *AgentProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource system metadata.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// AgentList - List of agents.
type AgentList struct {
	// READ-ONLY; Request URL that can be used to query next page of containers. Returned when total number of requested containers
	// exceed maximum page size.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY
	Value []*Agent `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AgentList.
func (a AgentList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", a.NextLink)
	populate(objectMap, "value", a.Value)
	return json.Marshal(objectMap)
}

type AgentProperties struct {
	// REQUIRED; The fully qualified resource ID of the hybrid compute resource for the agent.
	ArcResourceID *string `json:"arcResourceId,omitempty"`

	// REQUIRED; A GUID for this agent.
	ArcVMUUID *string `json:"arcVmUuid,omitempty"`

	// A description for the agent.
	Description *string `json:"description,omitempty"`

	// READ-ONLY; The agent status.
	AgentStatus *AgentStatus `json:"agentStatus,omitempty" azure:"ro"`

	// READ-ONLY; The agent version.
	AgentVersion *string `json:"agentVersion,omitempty" azure:"ro"`

	// READ-ONLY
	ErrorDetails *AgentPropertiesErrorDetails `json:"errorDetails,omitempty" azure:"ro"`

	// READ-ONLY; The last updated time of the agent status.
	LastStatusUpdate *time.Time `json:"lastStatusUpdate,omitempty" azure:"ro"`

	// READ-ONLY; Local IP address reported by the agent.
	LocalIPAddress *string `json:"localIPAddress,omitempty" azure:"ro"`

	// READ-ONLY; Available memory reported by the agent, in MB.
	MemoryInMB *int64 `json:"memoryInMB,omitempty" azure:"ro"`

	// READ-ONLY; Available compute cores reported by the agent.
	NumberOfCores *int64 `json:"numberOfCores,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type AgentProperties.
func (a AgentProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "agentStatus", a.AgentStatus)
	populate(objectMap, "agentVersion", a.AgentVersion)
	populate(objectMap, "arcResourceId", a.ArcResourceID)
	populate(objectMap, "arcVmUuid", a.ArcVMUUID)
	populate(objectMap, "description", a.Description)
	populate(objectMap, "errorDetails", a.ErrorDetails)
	populateTimeRFC3339(objectMap, "lastStatusUpdate", a.LastStatusUpdate)
	populate(objectMap, "localIPAddress", a.LocalIPAddress)
	populate(objectMap, "memoryInMB", a.MemoryInMB)
	populate(objectMap, "numberOfCores", a.NumberOfCores)
	populate(objectMap, "provisioningState", a.ProvisioningState)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type AgentProperties.
func (a *AgentProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "agentStatus":
			err = unpopulate(val, &a.AgentStatus)
			delete(rawMsg, key)
		case "agentVersion":
			err = unpopulate(val, &a.AgentVersion)
			delete(rawMsg, key)
		case "arcResourceId":
			err = unpopulate(val, &a.ArcResourceID)
			delete(rawMsg, key)
		case "arcVmUuid":
			err = unpopulate(val, &a.ArcVMUUID)
			delete(rawMsg, key)
		case "description":
			err = unpopulate(val, &a.Description)
			delete(rawMsg, key)
		case "errorDetails":
			err = unpopulate(val, &a.ErrorDetails)
			delete(rawMsg, key)
		case "lastStatusUpdate":
			err = unpopulateTimeRFC3339(val, &a.LastStatusUpdate)
			delete(rawMsg, key)
		case "localIPAddress":
			err = unpopulate(val, &a.LocalIPAddress)
			delete(rawMsg, key)
		case "memoryInMB":
			err = unpopulate(val, &a.MemoryInMB)
			delete(rawMsg, key)
		case "numberOfCores":
			err = unpopulate(val, &a.NumberOfCores)
			delete(rawMsg, key)
		case "provisioningState":
			err = unpopulate(val, &a.ProvisioningState)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

type AgentPropertiesErrorDetails struct {
	// Error code reported by Agent
	Code *string `json:"code,omitempty"`

	// Expanded description of reported error code
	Message *string `json:"message,omitempty"`
}

// AgentUpdateParameters - The agent resource.
type AgentUpdateParameters struct {
	Properties *AgentUpdateProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type AgentUpdateParameters.
func (a AgentUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", a.Properties)
	return json.Marshal(objectMap)
}

type AgentUpdateProperties struct {
	// A description for the agent.
	Description *string `json:"description,omitempty"`
}

// AgentsClientBeginDeleteOptions contains the optional parameters for the AgentsClient.BeginDelete method.
type AgentsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// AgentsClientCreateOrUpdateOptions contains the optional parameters for the AgentsClient.CreateOrUpdate method.
type AgentsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AgentsClientGetOptions contains the optional parameters for the AgentsClient.Get method.
type AgentsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AgentsClientListOptions contains the optional parameters for the AgentsClient.List method.
type AgentsClientListOptions struct {
	// placeholder for future optional parameters
}

// AgentsClientUpdateOptions contains the optional parameters for the AgentsClient.Update method.
type AgentsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

type AzureStorageBlobContainerEndpointProperties struct {
	// REQUIRED; The name of the Storage blob container that is the target destination.
	BlobContainerName *string `json:"blobContainerName,omitempty"`

	// REQUIRED; The endpoint resource type.
	EndpointType *EndpointType `json:"endpointType,omitempty"`

	// REQUIRED; The Azure Resource ID of the storage account that is the target destination.
	StorageAccountResourceID *string `json:"storageAccountResourceId,omitempty"`

	// A description for the endpoint.
	Description *string `json:"description,omitempty"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// GetEndpointBaseProperties implements the EndpointBasePropertiesClassification interface for type AzureStorageBlobContainerEndpointProperties.
func (a *AzureStorageBlobContainerEndpointProperties) GetEndpointBaseProperties() *EndpointBaseProperties {
	return &EndpointBaseProperties{
		EndpointType:      a.EndpointType,
		Description:       a.Description,
		ProvisioningState: a.ProvisioningState,
	}
}

// MarshalJSON implements the json.Marshaller interface for type AzureStorageBlobContainerEndpointProperties.
func (a AzureStorageBlobContainerEndpointProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "blobContainerName", a.BlobContainerName)
	populate(objectMap, "description", a.Description)
	objectMap["endpointType"] = EndpointTypeAzureStorageBlobContainer
	populate(objectMap, "provisioningState", a.ProvisioningState)
	populate(objectMap, "storageAccountResourceId", a.StorageAccountResourceID)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type AzureStorageBlobContainerEndpointProperties.
func (a *AzureStorageBlobContainerEndpointProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "blobContainerName":
			err = unpopulate(val, &a.BlobContainerName)
			delete(rawMsg, key)
		case "description":
			err = unpopulate(val, &a.Description)
			delete(rawMsg, key)
		case "endpointType":
			err = unpopulate(val, &a.EndpointType)
			delete(rawMsg, key)
		case "provisioningState":
			err = unpopulate(val, &a.ProvisioningState)
			delete(rawMsg, key)
		case "storageAccountResourceId":
			err = unpopulate(val, &a.StorageAccountResourceID)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

type AzureStorageBlobContainerEndpointUpdateProperties struct {
	// A description for the endpoint.
	Description *string `json:"description,omitempty"`
}

// Endpoint - The endpoint resource, which contains information about file sources and targets.
type Endpoint struct {
	// The resource specific properties for the Storage Mover resource.
	Properties EndpointBasePropertiesClassification `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource system metadata.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type Endpoint.
func (e Endpoint) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", e.ID)
	populate(objectMap, "name", e.Name)
	populate(objectMap, "properties", e.Properties)
	populate(objectMap, "systemData", e.SystemData)
	populate(objectMap, "type", e.Type)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type Endpoint.
func (e *Endpoint) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "id":
			err = unpopulate(val, &e.ID)
			delete(rawMsg, key)
		case "name":
			err = unpopulate(val, &e.Name)
			delete(rawMsg, key)
		case "properties":
			e.Properties, err = unmarshalEndpointBasePropertiesClassification(val)
			delete(rawMsg, key)
		case "systemData":
			err = unpopulate(val, &e.SystemData)
			delete(rawMsg, key)
		case "type":
			err = unpopulate(val, &e.Type)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// EndpointBasePropertiesClassification provides polymorphic access to related types.
// Call the interface's GetEndpointBaseProperties() method to access the common type.
// Use a type switch to determine the concrete type.  The possible types are:
// - *AzureStorageBlobContainerEndpointProperties, *EndpointBaseProperties, *NfsMountEndpointProperties
type EndpointBasePropertiesClassification interface {
	// GetEndpointBaseProperties returns the EndpointBaseProperties content of the underlying type.
	GetEndpointBaseProperties() *EndpointBaseProperties
}

// EndpointBaseProperties - The resource specific properties for the Storage Mover resource.
type EndpointBaseProperties struct {
	// REQUIRED; The endpoint resource type.
	EndpointType *EndpointType `json:"endpointType,omitempty"`

	// A description for the endpoint.
	Description *string `json:"description,omitempty"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// GetEndpointBaseProperties implements the EndpointBasePropertiesClassification interface for type EndpointBaseProperties.
func (e *EndpointBaseProperties) GetEndpointBaseProperties() *EndpointBaseProperties { return e }

// EndpointBaseUpdateParameters - The endpoint resource.
type EndpointBaseUpdateParameters struct {
	// The endpoint resource, which contains information about file sources and targets.
	Properties *EndpointBaseUpdateProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type EndpointBaseUpdateParameters.
func (e EndpointBaseUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", e.Properties)
	return json.Marshal(objectMap)
}

// EndpointBaseUpdateProperties - The endpoint resource, which contains information about file sources and targets.
type EndpointBaseUpdateProperties struct {
	// A description for the endpoint.
	Description *string `json:"description,omitempty"`
}

// EndpointList - List of endpoints.
type EndpointList struct {
	// READ-ONLY; Request URL that can be used to query next page of containers. Returned when total number of requested containers
	// exceed maximum page size.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY
	Value []*Endpoint `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type EndpointList.
func (e EndpointList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", e.NextLink)
	populate(objectMap, "value", e.Value)
	return json.Marshal(objectMap)
}

// EndpointsClientBeginDeleteOptions contains the optional parameters for the EndpointsClient.BeginDelete method.
type EndpointsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// EndpointsClientCreateOrUpdateOptions contains the optional parameters for the EndpointsClient.CreateOrUpdate method.
type EndpointsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// EndpointsClientGetOptions contains the optional parameters for the EndpointsClient.Get method.
type EndpointsClientGetOptions struct {
	// placeholder for future optional parameters
}

// EndpointsClientListOptions contains the optional parameters for the EndpointsClient.List method.
type EndpointsClientListOptions struct {
	// placeholder for future optional parameters
}

// EndpointsClientUpdateOptions contains the optional parameters for the EndpointsClient.Update method.
type EndpointsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// ErrorAdditionalInfo - The resource management error additional info.
type ErrorAdditionalInfo struct {
	// READ-ONLY; The additional info.
	Info map[string]interface{} `json:"info,omitempty" azure:"ro"`

	// READ-ONLY; The additional info type.
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ErrorDetail - The error detail.
type ErrorDetail struct {
	// READ-ONLY; The error additional info.
	AdditionalInfo []*ErrorAdditionalInfo `json:"additionalInfo,omitempty" azure:"ro"`

	// READ-ONLY; The error code.
	Code *string `json:"code,omitempty" azure:"ro"`

	// READ-ONLY; The error details.
	Details []*ErrorDetail `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The error message.
	Message *string `json:"message,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ErrorDetail.
func (e ErrorDetail) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "additionalInfo", e.AdditionalInfo)
	populate(objectMap, "code", e.Code)
	populate(objectMap, "details", e.Details)
	populate(objectMap, "message", e.Message)
	populate(objectMap, "target", e.Target)
	return json.Marshal(objectMap)
}

// ErrorResponse - Common error response for all Azure Resource Manager APIs to return error details for failed operations.
// (This also follows the OData error response format.).
type ErrorResponse struct {
	// The error object.
	Error *ErrorDetail `json:"error,omitempty"`
}

// JobDefinition - The job definition resource.
type JobDefinition struct {
	// Job definition properties.
	Properties *JobDefinitionProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource system metadata.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// JobDefinitionList - List of job definitions.
type JobDefinitionList struct {
	// READ-ONLY; Request URL that can be used to query next page of containers. Returned when total number of requested containers
	// exceed maximum page size.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY
	Value []*JobDefinition `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type JobDefinitionList.
func (j JobDefinitionList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", j.NextLink)
	populate(objectMap, "value", j.Value)
	return json.Marshal(objectMap)
}

// JobDefinitionProperties - Job definition properties.
type JobDefinitionProperties struct {
	// REQUIRED; The name of the source endpoint.
	SourceName *string `json:"sourceName,omitempty"`

	// REQUIRED; The name of the target endpoint.
	TargetName *string `json:"targetName,omitempty"`

	// Name of the agent to assign for new job runs of this definition.
	AgentName *string `json:"agentName,omitempty"`

	// Strategy to use for copy.
	CopyMode *CopyMode `json:"copyMode,omitempty"`

	// A description for the job definition.
	Description *string `json:"description,omitempty"`

	// The subpath to use when reading from the source Endpoint.
	SourceSubpath *string `json:"sourceSubpath,omitempty"`

	// The subpath to use when writing to the target Endpoint.
	TargetSubpath *string `json:"targetSubpath,omitempty"`

	// READ-ONLY; Fully qualified resource id of the agent to assign for new job runs of this definition.
	AgentResourceID *string `json:"agentResourceId,omitempty" azure:"ro"`

	// READ-ONLY; The name of the job run in a non-terminal state, if exists.
	LatestJobRunName *string `json:"latestJobRunName,omitempty" azure:"ro"`

	// READ-ONLY; The fully qualified resource ID of the job run in a non-terminal state, if exists.
	LatestJobRunResourceID *string `json:"latestJobRunResourceId,omitempty" azure:"ro"`

	// READ-ONLY; The current status of the job run in a non-terminal state, if exists.
	LatestJobRunStatus *JobRunStatus `json:"latestJobRunStatus,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified resource ID of the source endpoint.
	SourceResourceID *string `json:"sourceResourceId,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified resource ID of the target endpoint.
	TargetResourceID *string `json:"targetResourceId,omitempty" azure:"ro"`
}

// JobDefinitionUpdateParameters - The job definition resource.
type JobDefinitionUpdateParameters struct {
	// Job definition properties.
	Properties *JobDefinitionUpdateProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type JobDefinitionUpdateParameters.
func (j JobDefinitionUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", j.Properties)
	return json.Marshal(objectMap)
}

// JobDefinitionUpdateProperties - Job definition properties.
type JobDefinitionUpdateProperties struct {
	// Name of the agent to assign for new job runs of this definition.
	AgentName *string `json:"agentName,omitempty"`

	// Strategy to use for copy.
	CopyMode *CopyMode `json:"copyMode,omitempty"`

	// A description for the job definition.
	Description *string `json:"description,omitempty"`
}

// JobDefinitionsClientBeginDeleteOptions contains the optional parameters for the JobDefinitionsClient.BeginDelete method.
type JobDefinitionsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// JobDefinitionsClientCreateOrUpdateOptions contains the optional parameters for the JobDefinitionsClient.CreateOrUpdate
// method.
type JobDefinitionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// JobDefinitionsClientGetOptions contains the optional parameters for the JobDefinitionsClient.Get method.
type JobDefinitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobDefinitionsClientListOptions contains the optional parameters for the JobDefinitionsClient.List method.
type JobDefinitionsClientListOptions struct {
	// placeholder for future optional parameters
}

// JobDefinitionsClientStartJobOptions contains the optional parameters for the JobDefinitionsClient.StartJob method.
type JobDefinitionsClientStartJobOptions struct {
	// placeholder for future optional parameters
}

// JobDefinitionsClientStopJobOptions contains the optional parameters for the JobDefinitionsClient.StopJob method.
type JobDefinitionsClientStopJobOptions struct {
	// placeholder for future optional parameters
}

// JobDefinitionsClientUpdateOptions contains the optional parameters for the JobDefinitionsClient.Update method.
type JobDefinitionsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// JobRun - The job run resource.
type JobRun struct {
	// Job run properties.
	Properties *JobRunProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource system metadata.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// JobRunError - Error type
type JobRunError struct {
	// Error code of the given entry.
	Code *string `json:"code,omitempty"`

	// Error message of the given entry.
	Message *string `json:"message,omitempty"`

	// Target of the given error entry.
	Target *string `json:"target,omitempty"`
}

// JobRunList - List of job runs.
type JobRunList struct {
	// READ-ONLY; Request URL that can be used to query next page of containers. Returned when total number of requested containers
	// exceed maximum page size.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY
	Value []*JobRun `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type JobRunList.
func (j JobRunList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", j.NextLink)
	populate(objectMap, "value", j.Value)
	return json.Marshal(objectMap)
}

// JobRunProperties - Job run properties.
type JobRunProperties struct {
	// READ-ONLY; Name of the agent assigned to this run.
	AgentName *string `json:"agentName,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified resource id of the agent assigned to this run.
	AgentResourceID *string `json:"agentResourceId,omitempty" azure:"ro"`

	// READ-ONLY; Bytes of data identified for transferring so far in scan.
	BytesDesignatedForTransfer *int64 `json:"bytesDesignatedForTransfer,omitempty" azure:"ro"`

	// READ-ONLY; Bytes of data that will not be transferred, as they are excluded by user configuration.
	BytesExcluded *int64 `json:"bytesExcluded,omitempty" azure:"ro"`

	// READ-ONLY; Bytes of data that were attempted to transfer and failed.
	BytesFailed *int64 `json:"bytesFailed,omitempty" azure:"ro"`

	// READ-ONLY; Bytes of data that will not be transferred, as they are already found on target (e.g. mirror mode).
	BytesNoTransferNeeded *int64 `json:"bytesNoTransferNeeded,omitempty" azure:"ro"`

	// READ-ONLY; Bytes of data scanned so far in source.
	BytesScanned *int64 `json:"bytesScanned,omitempty" azure:"ro"`

	// READ-ONLY; Bytes of data successfully transferred to target.
	BytesTransferred *int64 `json:"bytesTransferred,omitempty" azure:"ro"`

	// READ-ONLY; Bytes of data that will not be transferred, as they are unsupported on target.
	BytesUnsupported *int64 `json:"bytesUnsupported,omitempty" azure:"ro"`

	// READ-ONLY; Error details.
	Error *JobRunError `json:"error,omitempty" azure:"ro"`

	// READ-ONLY; End time of the run. Null if agent has not reported that the job has ended.
	ExecutionEndTime *time.Time `json:"executionEndTime,omitempty" azure:"ro"`

	// READ-ONLY; Start time of the run. Null if no agent reported that the job has started.
	ExecutionStartTime *time.Time `json:"executionStartTime,omitempty" azure:"ro"`

	// READ-ONLY; Number of items identified for transferring so far in scan.
	ItemsDesignatedForTransfer *int64 `json:"itemsDesignatedForTransfer,omitempty" azure:"ro"`

	// READ-ONLY; Number of items that will not be transferred, as they are excluded by user configuration.
	ItemsExcluded *int64 `json:"itemsExcluded,omitempty" azure:"ro"`

	// READ-ONLY; Number of items that were attempted to transfer and failed.
	ItemsFailed *int64 `json:"itemsFailed,omitempty" azure:"ro"`

	// READ-ONLY; Number of items that will not be transferred, as they are already found on target (e.g. mirror mode).
	ItemsNoTransferNeeded *int64 `json:"itemsNoTransferNeeded,omitempty" azure:"ro"`

	// READ-ONLY; Number of items scanned so far in source.
	ItemsScanned *int64 `json:"itemsScanned,omitempty" azure:"ro"`

	// READ-ONLY; Number of items successfully transferred to target.
	ItemsTransferred *int64 `json:"itemsTransferred,omitempty" azure:"ro"`

	// READ-ONLY; Number of items that will not be transferred, as they are unsupported on target.
	ItemsUnsupported *int64 `json:"itemsUnsupported,omitempty" azure:"ro"`

	// READ-ONLY; Copy of parent Job Definition's properties at time of Job Run creation.
	JobDefinitionProperties map[string]interface{} `json:"jobDefinitionProperties,omitempty" azure:"ro"`

	// READ-ONLY; Last update time.
	LastUpdatedTime *time.Time `json:"lastUpdatedTime,omitempty" azure:"ro"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`

	// READ-ONLY; The status of agent's scanning of source.
	ScanStatus *JobRunScanStatus `json:"scanStatus,omitempty" azure:"ro"`

	// READ-ONLY; Name of source Endpoint resource. This resource may no longer exist.
	SourceName *string `json:"sourceName,omitempty" azure:"ro"`

	// READ-ONLY; Copy of source Endpoint resource's properties at time of Job Run creation.
	SourceProperties map[string]interface{} `json:"sourceProperties,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified resource id of source Endpoint. This id may no longer exist.
	SourceResourceID *string `json:"sourceResourceId,omitempty" azure:"ro"`

	// READ-ONLY; The state of the job execution.
	Status *JobRunStatus `json:"status,omitempty" azure:"ro"`

	// READ-ONLY; Name of target Endpoint resource. This resource may no longer exist.
	TargetName *string `json:"targetName,omitempty" azure:"ro"`

	// READ-ONLY; Copy of Endpoint resource's properties at time of Job Run creation.
	TargetProperties map[string]interface{} `json:"targetProperties,omitempty" azure:"ro"`

	// READ-ONLY; Fully qualified resource id of of Endpoint. This id may no longer exist.
	TargetResourceID *string `json:"targetResourceId,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type JobRunProperties.
func (j JobRunProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "agentName", j.AgentName)
	populate(objectMap, "agentResourceId", j.AgentResourceID)
	populate(objectMap, "bytesDesignatedForTransfer", j.BytesDesignatedForTransfer)
	populate(objectMap, "bytesExcluded", j.BytesExcluded)
	populate(objectMap, "bytesFailed", j.BytesFailed)
	populate(objectMap, "bytesNoTransferNeeded", j.BytesNoTransferNeeded)
	populate(objectMap, "bytesScanned", j.BytesScanned)
	populate(objectMap, "bytesTransferred", j.BytesTransferred)
	populate(objectMap, "bytesUnsupported", j.BytesUnsupported)
	populate(objectMap, "error", j.Error)
	populateTimeRFC3339(objectMap, "executionEndTime", j.ExecutionEndTime)
	populateTimeRFC3339(objectMap, "executionStartTime", j.ExecutionStartTime)
	populate(objectMap, "itemsDesignatedForTransfer", j.ItemsDesignatedForTransfer)
	populate(objectMap, "itemsExcluded", j.ItemsExcluded)
	populate(objectMap, "itemsFailed", j.ItemsFailed)
	populate(objectMap, "itemsNoTransferNeeded", j.ItemsNoTransferNeeded)
	populate(objectMap, "itemsScanned", j.ItemsScanned)
	populate(objectMap, "itemsTransferred", j.ItemsTransferred)
	populate(objectMap, "itemsUnsupported", j.ItemsUnsupported)
	populate(objectMap, "jobDefinitionProperties", j.JobDefinitionProperties)
	populateTimeRFC3339(objectMap, "lastUpdatedTime", j.LastUpdatedTime)
	populate(objectMap, "provisioningState", j.ProvisioningState)
	populate(objectMap, "scanStatus", j.ScanStatus)
	populate(objectMap, "sourceName", j.SourceName)
	populate(objectMap, "sourceProperties", j.SourceProperties)
	populate(objectMap, "sourceResourceId", j.SourceResourceID)
	populate(objectMap, "status", j.Status)
	populate(objectMap, "targetName", j.TargetName)
	populate(objectMap, "targetProperties", j.TargetProperties)
	populate(objectMap, "targetResourceId", j.TargetResourceID)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type JobRunProperties.
func (j *JobRunProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "agentName":
			err = unpopulate(val, &j.AgentName)
			delete(rawMsg, key)
		case "agentResourceId":
			err = unpopulate(val, &j.AgentResourceID)
			delete(rawMsg, key)
		case "bytesDesignatedForTransfer":
			err = unpopulate(val, &j.BytesDesignatedForTransfer)
			delete(rawMsg, key)
		case "bytesExcluded":
			err = unpopulate(val, &j.BytesExcluded)
			delete(rawMsg, key)
		case "bytesFailed":
			err = unpopulate(val, &j.BytesFailed)
			delete(rawMsg, key)
		case "bytesNoTransferNeeded":
			err = unpopulate(val, &j.BytesNoTransferNeeded)
			delete(rawMsg, key)
		case "bytesScanned":
			err = unpopulate(val, &j.BytesScanned)
			delete(rawMsg, key)
		case "bytesTransferred":
			err = unpopulate(val, &j.BytesTransferred)
			delete(rawMsg, key)
		case "bytesUnsupported":
			err = unpopulate(val, &j.BytesUnsupported)
			delete(rawMsg, key)
		case "error":
			err = unpopulate(val, &j.Error)
			delete(rawMsg, key)
		case "executionEndTime":
			err = unpopulateTimeRFC3339(val, &j.ExecutionEndTime)
			delete(rawMsg, key)
		case "executionStartTime":
			err = unpopulateTimeRFC3339(val, &j.ExecutionStartTime)
			delete(rawMsg, key)
		case "itemsDesignatedForTransfer":
			err = unpopulate(val, &j.ItemsDesignatedForTransfer)
			delete(rawMsg, key)
		case "itemsExcluded":
			err = unpopulate(val, &j.ItemsExcluded)
			delete(rawMsg, key)
		case "itemsFailed":
			err = unpopulate(val, &j.ItemsFailed)
			delete(rawMsg, key)
		case "itemsNoTransferNeeded":
			err = unpopulate(val, &j.ItemsNoTransferNeeded)
			delete(rawMsg, key)
		case "itemsScanned":
			err = unpopulate(val, &j.ItemsScanned)
			delete(rawMsg, key)
		case "itemsTransferred":
			err = unpopulate(val, &j.ItemsTransferred)
			delete(rawMsg, key)
		case "itemsUnsupported":
			err = unpopulate(val, &j.ItemsUnsupported)
			delete(rawMsg, key)
		case "jobDefinitionProperties":
			err = unpopulate(val, &j.JobDefinitionProperties)
			delete(rawMsg, key)
		case "lastUpdatedTime":
			err = unpopulateTimeRFC3339(val, &j.LastUpdatedTime)
			delete(rawMsg, key)
		case "provisioningState":
			err = unpopulate(val, &j.ProvisioningState)
			delete(rawMsg, key)
		case "scanStatus":
			err = unpopulate(val, &j.ScanStatus)
			delete(rawMsg, key)
		case "sourceName":
			err = unpopulate(val, &j.SourceName)
			delete(rawMsg, key)
		case "sourceProperties":
			err = unpopulate(val, &j.SourceProperties)
			delete(rawMsg, key)
		case "sourceResourceId":
			err = unpopulate(val, &j.SourceResourceID)
			delete(rawMsg, key)
		case "status":
			err = unpopulate(val, &j.Status)
			delete(rawMsg, key)
		case "targetName":
			err = unpopulate(val, &j.TargetName)
			delete(rawMsg, key)
		case "targetProperties":
			err = unpopulate(val, &j.TargetProperties)
			delete(rawMsg, key)
		case "targetResourceId":
			err = unpopulate(val, &j.TargetResourceID)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// JobRunResourceID - Response that identifies a JobRun.
type JobRunResourceID struct {
	// READ-ONLY; Fully qualified resource id of the JobRun.
	JobRunResourceID *string `json:"jobRunResourceId,omitempty" azure:"ro"`
}

// JobRunsClientGetOptions contains the optional parameters for the JobRunsClient.Get method.
type JobRunsClientGetOptions struct {
	// placeholder for future optional parameters
}

// JobRunsClientListOptions contains the optional parameters for the JobRunsClient.List method.
type JobRunsClientListOptions struct {
	// placeholder for future optional parameters
}

// List of Storage Movers.
type List struct {
	// READ-ONLY; Request URL that can be used to query next page of containers. Returned when total number of requested containers
	// exceed maximum page size.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY
	Value []*StorageMover `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type List.
func (l List) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", l.NextLink)
	populate(objectMap, "value", l.Value)
	return json.Marshal(objectMap)
}

type NfsMountEndpointProperties struct {
	// REQUIRED; The endpoint resource type.
	EndpointType *EndpointType `json:"endpointType,omitempty"`

	// REQUIRED; The host name or IP address of the server exporting the file system.
	Host *string `json:"host,omitempty"`

	// REQUIRED; The directory being exported from the server.
	RemoteExport *string `json:"remoteExport,omitempty"`

	// A description for the endpoint.
	Description *string `json:"description,omitempty"`

	// The NFS protocol version.
	NfsVersion *NfsVersion `json:"nfsVersion,omitempty"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// GetEndpointBaseProperties implements the EndpointBasePropertiesClassification interface for type NfsMountEndpointProperties.
func (n *NfsMountEndpointProperties) GetEndpointBaseProperties() *EndpointBaseProperties {
	return &EndpointBaseProperties{
		EndpointType:      n.EndpointType,
		Description:       n.Description,
		ProvisioningState: n.ProvisioningState,
	}
}

// MarshalJSON implements the json.Marshaller interface for type NfsMountEndpointProperties.
func (n NfsMountEndpointProperties) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "description", n.Description)
	objectMap["endpointType"] = EndpointTypeNfsMount
	populate(objectMap, "host", n.Host)
	populate(objectMap, "nfsVersion", n.NfsVersion)
	populate(objectMap, "provisioningState", n.ProvisioningState)
	populate(objectMap, "remoteExport", n.RemoteExport)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type NfsMountEndpointProperties.
func (n *NfsMountEndpointProperties) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "description":
			err = unpopulate(val, &n.Description)
			delete(rawMsg, key)
		case "endpointType":
			err = unpopulate(val, &n.EndpointType)
			delete(rawMsg, key)
		case "host":
			err = unpopulate(val, &n.Host)
			delete(rawMsg, key)
		case "nfsVersion":
			err = unpopulate(val, &n.NfsVersion)
			delete(rawMsg, key)
		case "provisioningState":
			err = unpopulate(val, &n.ProvisioningState)
			delete(rawMsg, key)
		case "remoteExport":
			err = unpopulate(val, &n.RemoteExport)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

type NfsMountEndpointUpdateProperties struct {
	// A description for the endpoint.
	Description *string `json:"description,omitempty"`
}

// Operation - Details of a REST API operation, returned from the Resource Provider Operations API
type Operation struct {
	// Localized display information for this particular operation.
	Display *OperationDisplay `json:"display,omitempty"`

	// READ-ONLY; Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
	ActionType *ActionType `json:"actionType,omitempty" azure:"ro"`

	// READ-ONLY; Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane
	// operations.
	IsDataAction *bool `json:"isDataAction,omitempty" azure:"ro"`

	// READ-ONLY; The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write",
	// "Microsoft.Compute/virtualMachines/capture/action"
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
	// value is "user,system"
	Origin *Origin `json:"origin,omitempty" azure:"ro"`
}

// OperationDisplay - Localized display information for this particular operation.
type OperationDisplay struct {
	// READ-ONLY; The short, localized friendly description of the operation; suitable for tool tips and detailed views.
	Description *string `json:"description,omitempty" azure:"ro"`

	// READ-ONLY; The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual
	// Machine", "Restart Virtual Machine".
	Operation *string `json:"operation,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft
	// Compute".
	Provider *string `json:"provider,omitempty" azure:"ro"`

	// READ-ONLY; The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job
	// Schedule Collections".
	Resource *string `json:"resource,omitempty" azure:"ro"`
}

// OperationListResult - A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to
// get the next set of results.
type OperationListResult struct {
	// READ-ONLY; URL to get the next set of operation list results (if there are any).
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY; List of operations supported by the resource provider
	Value []*Operation `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type OperationListResult.
func (o OperationListResult) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", o.NextLink)
	populate(objectMap, "value", o.Value)
	return json.Marshal(objectMap)
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.List method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// Project - The project resource.
type Project struct {
	// Project properties.
	Properties *ProjectProperties `json:"properties,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource system metadata.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// ProjectList - List of project resources.
type ProjectList struct {
	// READ-ONLY; Request URL that can be used to query next page of containers. Returned when total number of requested containers
	// exceed maximum page size.
	NextLink *string `json:"nextLink,omitempty" azure:"ro"`

	// READ-ONLY
	Value []*Project `json:"value,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type ProjectList.
func (p ProjectList) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "nextLink", p.NextLink)
	populate(objectMap, "value", p.Value)
	return json.Marshal(objectMap)
}

// ProjectProperties - Project properties.
type ProjectProperties struct {
	// A description for the project.
	Description *string `json:"description,omitempty"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// ProjectUpdateParameters - The project resource.
type ProjectUpdateParameters struct {
	// Project properties.
	Properties *ProjectUpdateProperties `json:"properties,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type ProjectUpdateParameters.
func (p ProjectUpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", p.Properties)
	return json.Marshal(objectMap)
}

// ProjectUpdateProperties - Project properties.
type ProjectUpdateProperties struct {
	// A description for the project.
	Description *string `json:"description,omitempty"`
}

// ProjectsClientBeginDeleteOptions contains the optional parameters for the ProjectsClient.BeginDelete method.
type ProjectsClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// ProjectsClientCreateOrUpdateOptions contains the optional parameters for the ProjectsClient.CreateOrUpdate method.
type ProjectsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProjectsClientGetOptions contains the optional parameters for the ProjectsClient.Get method.
type ProjectsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ProjectsClientListOptions contains the optional parameters for the ProjectsClient.List method.
type ProjectsClientListOptions struct {
	// placeholder for future optional parameters
}

// ProjectsClientUpdateOptions contains the optional parameters for the ProjectsClient.Update method.
type ProjectsClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// Properties - The resource specific properties for the Storage Mover resource.
type Properties struct {
	// A description for the Storage Mover.
	Description *string `json:"description,omitempty"`

	// READ-ONLY; The provisioning state of this resource.
	ProvisioningState *ProvisioningState `json:"provisioningState,omitempty" azure:"ro"`
}

// ProxyResource - The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a
// location
type ProxyResource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// Resource - Common fields that are returned in the response for all Azure Resource Manager resources
type Resource struct {
	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// StorageMover - The Storage Mover resource, which is a container for a group of Storage Mover agents and projects.
type StorageMover struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// The resource specific properties for the Storage Mover resource.
	Properties *Properties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; Resource system metadata.
	SystemData *SystemData `json:"systemData,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type StorageMover.
func (s StorageMover) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", s.ID)
	populate(objectMap, "location", s.Location)
	populate(objectMap, "name", s.Name)
	populate(objectMap, "properties", s.Properties)
	populate(objectMap, "systemData", s.SystemData)
	populate(objectMap, "tags", s.Tags)
	populate(objectMap, "type", s.Type)
	return json.Marshal(objectMap)
}

// StorageMoversClientBeginDeleteOptions contains the optional parameters for the StorageMoversClient.BeginDelete method.
type StorageMoversClientBeginDeleteOptions struct {
	// placeholder for future optional parameters
}

// StorageMoversClientCreateOrUpdateOptions contains the optional parameters for the StorageMoversClient.CreateOrUpdate method.
type StorageMoversClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// StorageMoversClientGetOptions contains the optional parameters for the StorageMoversClient.Get method.
type StorageMoversClientGetOptions struct {
	// placeholder for future optional parameters
}

// StorageMoversClientListBySubscriptionOptions contains the optional parameters for the StorageMoversClient.ListBySubscription
// method.
type StorageMoversClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// StorageMoversClientListOptions contains the optional parameters for the StorageMoversClient.List method.
type StorageMoversClientListOptions struct {
	// placeholder for future optional parameters
}

// StorageMoversClientUpdateOptions contains the optional parameters for the StorageMoversClient.Update method.
type StorageMoversClientUpdateOptions struct {
	// placeholder for future optional parameters
}

// SystemData - Metadata pertaining to creation and last modification of the resource.
type SystemData struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// The identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// The type of identity that created the resource.
	CreatedByType *CreatedByType `json:"createdByType,omitempty"`

	// The timestamp of resource last modification (UTC)
	LastModifiedAt *time.Time `json:"lastModifiedAt,omitempty"`

	// The identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`

	// The type of identity that last modified the resource.
	LastModifiedByType *CreatedByType `json:"lastModifiedByType,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type SystemData.
func (s SystemData) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populateTimeRFC3339(objectMap, "createdAt", s.CreatedAt)
	populate(objectMap, "createdBy", s.CreatedBy)
	populate(objectMap, "createdByType", s.CreatedByType)
	populateTimeRFC3339(objectMap, "lastModifiedAt", s.LastModifiedAt)
	populate(objectMap, "lastModifiedBy", s.LastModifiedBy)
	populate(objectMap, "lastModifiedByType", s.LastModifiedByType)
	return json.Marshal(objectMap)
}

// UnmarshalJSON implements the json.Unmarshaller interface for type SystemData.
func (s *SystemData) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	for key, val := range rawMsg {
		var err error
		switch key {
		case "createdAt":
			err = unpopulateTimeRFC3339(val, &s.CreatedAt)
			delete(rawMsg, key)
		case "createdBy":
			err = unpopulate(val, &s.CreatedBy)
			delete(rawMsg, key)
		case "createdByType":
			err = unpopulate(val, &s.CreatedByType)
			delete(rawMsg, key)
		case "lastModifiedAt":
			err = unpopulateTimeRFC3339(val, &s.LastModifiedAt)
			delete(rawMsg, key)
		case "lastModifiedBy":
			err = unpopulate(val, &s.LastModifiedBy)
			delete(rawMsg, key)
		case "lastModifiedByType":
			err = unpopulate(val, &s.LastModifiedByType)
			delete(rawMsg, key)
		}
		if err != nil {
			return err
		}
	}
	return nil
}

// TrackedResource - The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags'
// and a 'location'
type TrackedResource struct {
	// REQUIRED; The geo-location where the resource lives
	Location *string `json:"location,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`

	// READ-ONLY; Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	ID *string `json:"id,omitempty" azure:"ro"`

	// READ-ONLY; The name of the resource
	Name *string `json:"name,omitempty" azure:"ro"`

	// READ-ONLY; The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type *string `json:"type,omitempty" azure:"ro"`
}

// MarshalJSON implements the json.Marshaller interface for type TrackedResource.
func (t TrackedResource) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "id", t.ID)
	populate(objectMap, "location", t.Location)
	populate(objectMap, "name", t.Name)
	populate(objectMap, "tags", t.Tags)
	populate(objectMap, "type", t.Type)
	return json.Marshal(objectMap)
}

// UpdateParameters - The Storage Mover resource.
type UpdateParameters struct {
	// The resource specific properties for the Storage Mover resource.
	Properties *UpdateProperties `json:"properties,omitempty"`

	// Resource tags.
	Tags map[string]*string `json:"tags,omitempty"`
}

// MarshalJSON implements the json.Marshaller interface for type UpdateParameters.
func (u UpdateParameters) MarshalJSON() ([]byte, error) {
	objectMap := make(map[string]interface{})
	populate(objectMap, "properties", u.Properties)
	populate(objectMap, "tags", u.Tags)
	return json.Marshal(objectMap)
}

// UpdateProperties - The resource specific properties for the Storage Mover resource.
type UpdateProperties struct {
	// A description for the Storage Mover.
	Description *string `json:"description,omitempty"`
}

func populate(m map[string]interface{}, k string, v interface{}) {
	if v == nil {
		return
	} else if azcore.IsNullValue(v) {
		m[k] = nil
	} else if !reflect.ValueOf(v).IsNil() {
		m[k] = v
	}
}

func unpopulate(data json.RawMessage, v interface{}) error {
	if data == nil {
		return nil
	}
	return json.Unmarshal(data, v)
}
